2024-08-30 18:26:03,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-30 18:26:03,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-30 18:26:03,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-30 18:26:03,696:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2024-08-30 18:26:08,828:INFO:PyCaret ClassificationExperiment
2024-08-30 18:26:08,829:INFO:Logging name: clf-default-name
2024-08-30 18:26:08,829:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-30 18:26:08,829:INFO:version 3.3.2
2024-08-30 18:26:08,829:INFO:Initializing setup()
2024-08-30 18:26:08,829:INFO:self.USI: b3a7
2024-08-30 18:26:08,829:INFO:self._variable_keys: {'data', 'X', 'exp_id', 'idx', 'X_train', 'is_multiclass', 'y_train', '_ml_usecase', 'exp_name_log', 'y_test', '_available_plots', 'USI', 'n_jobs_param', 'log_plots_param', 'seed', 'fold_shuffle_param', 'X_test', 'pipeline', 'fix_imbalance', 'html_param', 'logging_param', 'memory', 'gpu_param', 'gpu_n_jobs_param', 'fold_groups_param', 'y', 'target_param', 'fold_generator'}
2024-08-30 18:26:08,829:INFO:Checking environment
2024-08-30 18:26:08,829:INFO:python_version: 3.10.14
2024-08-30 18:26:08,829:INFO:python_build: ('main', 'Mar 20 2024 12:40:08')
2024-08-30 18:26:08,829:INFO:machine: AMD64
2024-08-30 18:26:08,829:INFO:platform: Windows-10-10.0.22631-SP0
2024-08-30 18:26:08,837:INFO:Memory: svmem(total=33737760768, available=14444494848, percent=57.2, used=19293265920, free=14444494848)
2024-08-30 18:26:08,837:INFO:Physical Core: 8
2024-08-30 18:26:08,837:INFO:Logical Core: 16
2024-08-30 18:26:08,837:INFO:Checking libraries
2024-08-30 18:26:08,839:INFO:System:
2024-08-30 18:26:08,839:INFO:    python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:40:08) [MSC v.1938 64 bit (AMD64)]
2024-08-30 18:26:08,839:INFO:executable: c:\Users\Guill\miniconda3\envs\term_deposit\python.exe
2024-08-30 18:26:08,839:INFO:   machine: Windows-10-10.0.22631-SP0
2024-08-30 18:26:08,839:INFO:PyCaret required dependencies:
2024-08-30 18:26:09,546:INFO:                 pip: 24.2
2024-08-30 18:26:09,546:INFO:          setuptools: 72.2.0
2024-08-30 18:26:09,546:INFO:             pycaret: 3.3.2
2024-08-30 18:26:09,546:INFO:             IPython: 8.26.0
2024-08-30 18:26:09,546:INFO:          ipywidgets: 8.1.5
2024-08-30 18:26:09,546:INFO:                tqdm: 4.66.5
2024-08-30 18:26:09,546:INFO:               numpy: 1.23.5
2024-08-30 18:26:09,546:INFO:              pandas: 1.5.3
2024-08-30 18:26:09,546:INFO:              jinja2: 3.1.4
2024-08-30 18:26:09,546:INFO:               scipy: 1.11.4
2024-08-30 18:26:09,546:INFO:              joblib: 1.3.2
2024-08-30 18:26:09,546:INFO:             sklearn: 1.4.2
2024-08-30 18:26:09,546:INFO:                pyod: 2.0.1
2024-08-30 18:26:09,546:INFO:            imblearn: 0.12.3
2024-08-30 18:26:09,546:INFO:   category_encoders: 2.6.3
2024-08-30 18:26:09,546:INFO:            lightgbm: 4.5.0
2024-08-30 18:26:09,546:INFO:               numba: 0.60.0
2024-08-30 18:26:09,546:INFO:            requests: 2.32.3
2024-08-30 18:26:09,546:INFO:          matplotlib: 3.7.5
2024-08-30 18:26:09,546:INFO:          scikitplot: 0.3.7
2024-08-30 18:26:09,547:INFO:         yellowbrick: 1.5
2024-08-30 18:26:09,547:INFO:              plotly: 5.23.0
2024-08-30 18:26:09,547:INFO:    plotly-resampler: Not installed
2024-08-30 18:26:09,547:INFO:             kaleido: 0.2.1
2024-08-30 18:26:09,547:INFO:           schemdraw: 0.15
2024-08-30 18:26:09,547:INFO:         statsmodels: 0.14.2
2024-08-30 18:26:09,547:INFO:              sktime: 0.26.0
2024-08-30 18:26:09,547:INFO:               tbats: 1.1.3
2024-08-30 18:26:09,547:INFO:            pmdarima: 2.0.4
2024-08-30 18:26:09,547:INFO:              psutil: 6.0.0
2024-08-30 18:26:09,547:INFO:          markupsafe: 2.1.5
2024-08-30 18:26:09,547:INFO:             pickle5: Not installed
2024-08-30 18:26:09,547:INFO:         cloudpickle: 3.0.0
2024-08-30 18:26:09,547:INFO:         deprecation: 2.1.0
2024-08-30 18:26:09,547:INFO:              xxhash: 3.5.0
2024-08-30 18:26:09,547:INFO:           wurlitzer: Not installed
2024-08-30 18:26:09,547:INFO:PyCaret optional dependencies:
2024-08-30 18:26:09,821:INFO:                shap: 0.43.0
2024-08-30 18:26:09,821:INFO:           interpret: Not installed
2024-08-30 18:26:09,821:INFO:                umap: Not installed
2024-08-30 18:26:09,821:INFO:     ydata_profiling: Not installed
2024-08-30 18:26:09,821:INFO:  explainerdashboard: Not installed
2024-08-30 18:26:09,821:INFO:             autoviz: Not installed
2024-08-30 18:26:09,821:INFO:           fairlearn: Not installed
2024-08-30 18:26:09,821:INFO:          deepchecks: Not installed
2024-08-30 18:26:09,821:INFO:             xgboost: 2.1.1
2024-08-30 18:26:09,821:INFO:            catboost: Not installed
2024-08-30 18:26:09,821:INFO:              kmodes: Not installed
2024-08-30 18:26:09,821:INFO:             mlxtend: Not installed
2024-08-30 18:26:09,821:INFO:       statsforecast: Not installed
2024-08-30 18:26:09,822:INFO:        tune_sklearn: Not installed
2024-08-30 18:26:09,822:INFO:                 ray: 2.35.0
2024-08-30 18:26:09,822:INFO:            hyperopt: Not installed
2024-08-30 18:26:09,822:INFO:              optuna: Not installed
2024-08-30 18:26:09,822:INFO:               skopt: Not installed
2024-08-30 18:26:09,822:INFO:              mlflow: 2.16.0
2024-08-30 18:26:09,822:INFO:              gradio: Not installed
2024-08-30 18:26:09,822:INFO:             fastapi: Not installed
2024-08-30 18:26:09,822:INFO:             uvicorn: Not installed
2024-08-30 18:26:09,822:INFO:              m2cgen: Not installed
2024-08-30 18:26:09,822:INFO:           evidently: Not installed
2024-08-30 18:26:09,822:INFO:               fugue: Not installed
2024-08-30 18:26:09,822:INFO:           streamlit: Not installed
2024-08-30 18:26:09,822:INFO:             prophet: Not installed
2024-08-30 18:26:09,822:INFO:None
2024-08-30 18:26:09,822:INFO:Set up data.
2024-08-30 18:26:09,869:INFO:Set up folding strategy.
2024-08-30 18:26:09,870:INFO:Set up train/test split.
2024-08-30 18:26:10,142:INFO:Set up index.
2024-08-30 18:26:10,146:INFO:Assigning column types.
2024-08-30 18:26:10,154:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-30 18:26:10,208:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-30 18:26:10,229:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 18:26:10,284:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:26:10,287:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:26:10,338:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-30 18:26:10,339:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 18:26:10,371:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:26:10,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:26:10,375:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-30 18:26:10,424:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 18:26:10,457:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:26:10,460:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:26:10,510:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 18:26:10,634:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:26:10,637:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:26:10,637:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-30 18:26:10,721:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:26:10,724:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:26:10,812:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:26:10,815:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:26:10,817:INFO:Preparing preprocessing pipeline...
2024-08-30 18:26:10,820:INFO:Set up simple imputation.
2024-08-30 18:26:11,206:INFO:Finished creating preprocessing pipeline.
2024-08-30 18:26:11,211:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Guill\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'fea...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-08-30 18:26:11,211:INFO:Creating final display dataframe.
2024-08-30 18:26:12,334:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                 y
2                   Target type            Binary
3           Original data shape       (59308, 45)
4        Transformed data shape       (59308, 45)
5   Transformed train set shape       (41515, 45)
6    Transformed test set shape       (17793, 45)
7              Numeric features                44
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              b3a7
2024-08-30 18:26:12,428:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:26:12,431:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:26:12,516:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:26:12,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:26:12,521:INFO:setup() successfully completed in 3.69s...............
2024-08-30 18:26:23,232:INFO:Initializing compare_models()
2024-08-30 18:26:23,232:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-08-30 18:26:23,233:INFO:Checking exceptions
2024-08-30 18:26:23,421:INFO:Preparing display monitor
2024-08-30 18:26:23,463:INFO:Initializing Logistic Regression
2024-08-30 18:26:23,464:INFO:Total runtime is 1.6570091247558594e-05 minutes
2024-08-30 18:26:23,468:INFO:SubProcess create_model() called ==================================
2024-08-30 18:26:23,468:INFO:Initializing create_model()
2024-08-30 18:26:23,469:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:26:23,469:INFO:Checking exceptions
2024-08-30 18:26:23,469:INFO:Importing libraries
2024-08-30 18:26:23,469:INFO:Copying training dataset
2024-08-30 18:26:23,894:INFO:Defining folds
2024-08-30 18:26:23,894:INFO:Declaring metric variables
2024-08-30 18:26:23,898:INFO:Importing untrained model
2024-08-30 18:26:23,903:INFO:Logistic Regression Imported successfully
2024-08-30 18:26:23,912:INFO:Starting cross validation
2024-08-30 18:26:23,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:26:34,086:INFO:Calculating mean and std
2024-08-30 18:26:34,089:INFO:Creating metrics dataframe
2024-08-30 18:26:34,099:INFO:Uploading results into container
2024-08-30 18:26:34,101:INFO:Uploading model into container now
2024-08-30 18:26:34,102:INFO:_master_model_container: 1
2024-08-30 18:26:34,103:INFO:_display_container: 2
2024-08-30 18:26:34,103:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-30 18:26:34,104:INFO:create_model() successfully completed......................................
2024-08-30 18:26:34,247:INFO:SubProcess create_model() end ==================================
2024-08-30 18:26:34,247:INFO:Creating metrics dataframe
2024-08-30 18:26:34,258:INFO:Initializing K Neighbors Classifier
2024-08-30 18:26:34,259:INFO:Total runtime is 0.17993276119232177 minutes
2024-08-30 18:26:34,263:INFO:SubProcess create_model() called ==================================
2024-08-30 18:26:34,263:INFO:Initializing create_model()
2024-08-30 18:26:34,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:26:34,263:INFO:Checking exceptions
2024-08-30 18:26:34,263:INFO:Importing libraries
2024-08-30 18:26:34,263:INFO:Copying training dataset
2024-08-30 18:26:34,681:INFO:Defining folds
2024-08-30 18:26:34,681:INFO:Declaring metric variables
2024-08-30 18:26:34,687:INFO:Importing untrained model
2024-08-30 18:26:34,693:INFO:K Neighbors Classifier Imported successfully
2024-08-30 18:26:34,702:INFO:Starting cross validation
2024-08-30 18:26:34,704:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:27:33,671:INFO:Calculating mean and std
2024-08-30 18:27:33,673:INFO:Creating metrics dataframe
2024-08-30 18:27:33,677:INFO:Uploading results into container
2024-08-30 18:27:33,682:INFO:Uploading model into container now
2024-08-30 18:27:33,686:INFO:_master_model_container: 2
2024-08-30 18:27:33,687:INFO:_display_container: 2
2024-08-30 18:27:33,689:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-30 18:27:33,690:INFO:create_model() successfully completed......................................
2024-08-30 18:27:33,829:INFO:SubProcess create_model() end ==================================
2024-08-30 18:27:33,830:INFO:Creating metrics dataframe
2024-08-30 18:27:33,842:INFO:Initializing Naive Bayes
2024-08-30 18:27:33,842:INFO:Total runtime is 1.1729849775632222 minutes
2024-08-30 18:27:33,847:INFO:SubProcess create_model() called ==================================
2024-08-30 18:27:33,847:INFO:Initializing create_model()
2024-08-30 18:27:33,847:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:27:33,847:INFO:Checking exceptions
2024-08-30 18:27:33,848:INFO:Importing libraries
2024-08-30 18:27:33,848:INFO:Copying training dataset
2024-08-30 18:27:34,301:INFO:Defining folds
2024-08-30 18:27:34,302:INFO:Declaring metric variables
2024-08-30 18:27:34,307:INFO:Importing untrained model
2024-08-30 18:27:34,313:INFO:Naive Bayes Imported successfully
2024-08-30 18:27:34,322:INFO:Starting cross validation
2024-08-30 18:27:34,324:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:27:35,026:WARNING:create_model() for nb raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-30 18:27:35,033:WARNING:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:27:35,033:INFO:Initializing create_model()
2024-08-30 18:27:35,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:27:35,033:INFO:Checking exceptions
2024-08-30 18:27:35,033:INFO:Importing libraries
2024-08-30 18:27:35,033:INFO:Copying training dataset
2024-08-30 18:27:35,452:INFO:Defining folds
2024-08-30 18:27:35,452:INFO:Declaring metric variables
2024-08-30 18:27:35,458:INFO:Importing untrained model
2024-08-30 18:27:35,462:INFO:Naive Bayes Imported successfully
2024-08-30 18:27:35,472:INFO:Starting cross validation
2024-08-30 18:27:35,473:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:27:36,076:ERROR:create_model() for nb raised an exception or returned all 0.0:
2024-08-30 18:27:36,077:ERROR:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:27:36,079:INFO:Initializing Decision Tree Classifier
2024-08-30 18:27:36,079:INFO:Total runtime is 1.2102641065915425 minutes
2024-08-30 18:27:36,084:INFO:SubProcess create_model() called ==================================
2024-08-30 18:27:36,085:INFO:Initializing create_model()
2024-08-30 18:27:36,085:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:27:36,085:INFO:Checking exceptions
2024-08-30 18:27:36,085:INFO:Importing libraries
2024-08-30 18:27:36,085:INFO:Copying training dataset
2024-08-30 18:27:36,506:INFO:Defining folds
2024-08-30 18:27:36,507:INFO:Declaring metric variables
2024-08-30 18:27:36,512:INFO:Importing untrained model
2024-08-30 18:27:36,525:INFO:Decision Tree Classifier Imported successfully
2024-08-30 18:27:36,534:INFO:Starting cross validation
2024-08-30 18:27:36,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:27:39,445:INFO:Calculating mean and std
2024-08-30 18:27:39,446:INFO:Creating metrics dataframe
2024-08-30 18:27:39,451:INFO:Uploading results into container
2024-08-30 18:27:39,453:INFO:Uploading model into container now
2024-08-30 18:27:39,453:INFO:_master_model_container: 3
2024-08-30 18:27:39,453:INFO:_display_container: 2
2024-08-30 18:27:39,454:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-30 18:27:39,454:INFO:create_model() successfully completed......................................
2024-08-30 18:27:39,543:INFO:SubProcess create_model() end ==================================
2024-08-30 18:27:39,543:INFO:Creating metrics dataframe
2024-08-30 18:27:39,555:INFO:Initializing SVM - Linear Kernel
2024-08-30 18:27:39,555:INFO:Total runtime is 1.2681995272636413 minutes
2024-08-30 18:27:39,559:INFO:SubProcess create_model() called ==================================
2024-08-30 18:27:39,560:INFO:Initializing create_model()
2024-08-30 18:27:39,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:27:39,560:INFO:Checking exceptions
2024-08-30 18:27:39,560:INFO:Importing libraries
2024-08-30 18:27:39,560:INFO:Copying training dataset
2024-08-30 18:27:39,973:INFO:Defining folds
2024-08-30 18:27:39,974:INFO:Declaring metric variables
2024-08-30 18:27:39,980:INFO:Importing untrained model
2024-08-30 18:27:39,985:INFO:SVM - Linear Kernel Imported successfully
2024-08-30 18:27:39,994:INFO:Starting cross validation
2024-08-30 18:27:39,996:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:27:40,988:INFO:Calculating mean and std
2024-08-30 18:27:40,990:INFO:Creating metrics dataframe
2024-08-30 18:27:40,994:INFO:Uploading results into container
2024-08-30 18:27:40,995:INFO:Uploading model into container now
2024-08-30 18:27:40,995:INFO:_master_model_container: 4
2024-08-30 18:27:40,995:INFO:_display_container: 2
2024-08-30 18:27:40,996:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-30 18:27:40,997:INFO:create_model() successfully completed......................................
2024-08-30 18:27:41,084:INFO:SubProcess create_model() end ==================================
2024-08-30 18:27:41,084:INFO:Creating metrics dataframe
2024-08-30 18:27:41,095:INFO:Initializing Ridge Classifier
2024-08-30 18:27:41,096:INFO:Total runtime is 1.2938719034194945 minutes
2024-08-30 18:27:41,100:INFO:SubProcess create_model() called ==================================
2024-08-30 18:27:41,100:INFO:Initializing create_model()
2024-08-30 18:27:41,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:27:41,100:INFO:Checking exceptions
2024-08-30 18:27:41,100:INFO:Importing libraries
2024-08-30 18:27:41,100:INFO:Copying training dataset
2024-08-30 18:27:41,509:INFO:Defining folds
2024-08-30 18:27:41,510:INFO:Declaring metric variables
2024-08-30 18:27:41,526:INFO:Importing untrained model
2024-08-30 18:27:41,530:INFO:Ridge Classifier Imported successfully
2024-08-30 18:27:41,539:INFO:Starting cross validation
2024-08-30 18:27:41,540:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:27:42,449:INFO:Calculating mean and std
2024-08-30 18:27:42,450:INFO:Creating metrics dataframe
2024-08-30 18:27:42,454:INFO:Uploading results into container
2024-08-30 18:27:42,455:INFO:Uploading model into container now
2024-08-30 18:27:42,456:INFO:_master_model_container: 5
2024-08-30 18:27:42,456:INFO:_display_container: 2
2024-08-30 18:27:42,456:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-08-30 18:27:42,456:INFO:create_model() successfully completed......................................
2024-08-30 18:27:42,545:INFO:SubProcess create_model() end ==================================
2024-08-30 18:27:42,545:INFO:Creating metrics dataframe
2024-08-30 18:27:42,558:INFO:Initializing Random Forest Classifier
2024-08-30 18:27:42,558:INFO:Total runtime is 1.3182439565658568 minutes
2024-08-30 18:27:42,563:INFO:SubProcess create_model() called ==================================
2024-08-30 18:27:42,564:INFO:Initializing create_model()
2024-08-30 18:27:42,564:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:27:42,565:INFO:Checking exceptions
2024-08-30 18:27:42,565:INFO:Importing libraries
2024-08-30 18:27:42,565:INFO:Copying training dataset
2024-08-30 18:27:43,004:INFO:Defining folds
2024-08-30 18:27:43,005:INFO:Declaring metric variables
2024-08-30 18:27:43,010:INFO:Importing untrained model
2024-08-30 18:27:43,015:INFO:Random Forest Classifier Imported successfully
2024-08-30 18:27:43,024:INFO:Starting cross validation
2024-08-30 18:27:43,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:28:14,217:INFO:Calculating mean and std
2024-08-30 18:28:14,218:INFO:Creating metrics dataframe
2024-08-30 18:28:14,222:INFO:Uploading results into container
2024-08-30 18:28:14,223:INFO:Uploading model into container now
2024-08-30 18:28:14,224:INFO:_master_model_container: 6
2024-08-30 18:28:14,224:INFO:_display_container: 2
2024-08-30 18:28:14,225:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-30 18:28:14,225:INFO:create_model() successfully completed......................................
2024-08-30 18:28:14,339:INFO:SubProcess create_model() end ==================================
2024-08-30 18:28:14,340:INFO:Creating metrics dataframe
2024-08-30 18:28:14,354:INFO:Initializing Quadratic Discriminant Analysis
2024-08-30 18:28:14,354:INFO:Total runtime is 1.8481825590133667 minutes
2024-08-30 18:28:14,359:INFO:SubProcess create_model() called ==================================
2024-08-30 18:28:14,359:INFO:Initializing create_model()
2024-08-30 18:28:14,359:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:28:14,359:INFO:Checking exceptions
2024-08-30 18:28:14,359:INFO:Importing libraries
2024-08-30 18:28:14,360:INFO:Copying training dataset
2024-08-30 18:28:14,787:INFO:Defining folds
2024-08-30 18:28:14,787:INFO:Declaring metric variables
2024-08-30 18:28:14,792:INFO:Importing untrained model
2024-08-30 18:28:14,796:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-30 18:28:14,805:INFO:Starting cross validation
2024-08-30 18:28:14,807:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:28:15,359:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-30 18:28:15,360:WARNING:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 899, in fit
    X, y = self._validate_data(X, y)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:28:15,360:INFO:Initializing create_model()
2024-08-30 18:28:15,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:28:15,361:INFO:Checking exceptions
2024-08-30 18:28:15,361:INFO:Importing libraries
2024-08-30 18:28:15,361:INFO:Copying training dataset
2024-08-30 18:28:15,794:INFO:Defining folds
2024-08-30 18:28:15,794:INFO:Declaring metric variables
2024-08-30 18:28:15,801:INFO:Importing untrained model
2024-08-30 18:28:15,806:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-30 18:28:15,817:INFO:Starting cross validation
2024-08-30 18:28:15,818:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:28:16,387:ERROR:create_model() for qda raised an exception or returned all 0.0:
2024-08-30 18:28:16,389:ERROR:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 899, in fit
    X, y = self._validate_data(X, y)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 899, in fit
    X, y = self._validate_data(X, y)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:28:16,390:INFO:Initializing Ada Boost Classifier
2024-08-30 18:28:16,390:INFO:Total runtime is 1.882121980190277 minutes
2024-08-30 18:28:16,395:INFO:SubProcess create_model() called ==================================
2024-08-30 18:28:16,395:INFO:Initializing create_model()
2024-08-30 18:28:16,396:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:28:16,396:INFO:Checking exceptions
2024-08-30 18:28:16,396:INFO:Importing libraries
2024-08-30 18:28:16,396:INFO:Copying training dataset
2024-08-30 18:28:16,835:INFO:Defining folds
2024-08-30 18:28:16,835:INFO:Declaring metric variables
2024-08-30 18:28:16,842:INFO:Importing untrained model
2024-08-30 18:28:16,846:INFO:Ada Boost Classifier Imported successfully
2024-08-30 18:28:16,855:INFO:Starting cross validation
2024-08-30 18:28:16,856:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:28:17,194:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:28:17,200:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:28:17,231:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:28:17,266:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:28:17,305:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:28:17,353:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:28:17,360:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:28:17,393:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:28:17,450:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:28:17,479:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:28:22,093:INFO:Calculating mean and std
2024-08-30 18:28:22,094:INFO:Creating metrics dataframe
2024-08-30 18:28:22,098:INFO:Uploading results into container
2024-08-30 18:28:22,098:INFO:Uploading model into container now
2024-08-30 18:28:22,099:INFO:_master_model_container: 7
2024-08-30 18:28:22,099:INFO:_display_container: 2
2024-08-30 18:28:22,099:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-08-30 18:28:22,100:INFO:create_model() successfully completed......................................
2024-08-30 18:28:22,191:INFO:SubProcess create_model() end ==================================
2024-08-30 18:28:22,192:INFO:Creating metrics dataframe
2024-08-30 18:28:22,204:INFO:Initializing Gradient Boosting Classifier
2024-08-30 18:28:22,204:INFO:Total runtime is 1.9790113290150961 minutes
2024-08-30 18:28:22,208:INFO:SubProcess create_model() called ==================================
2024-08-30 18:28:22,209:INFO:Initializing create_model()
2024-08-30 18:28:22,209:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:28:22,209:INFO:Checking exceptions
2024-08-30 18:28:22,209:INFO:Importing libraries
2024-08-30 18:28:22,209:INFO:Copying training dataset
2024-08-30 18:28:22,626:INFO:Defining folds
2024-08-30 18:28:22,626:INFO:Declaring metric variables
2024-08-30 18:28:22,631:INFO:Importing untrained model
2024-08-30 18:28:22,637:INFO:Gradient Boosting Classifier Imported successfully
2024-08-30 18:28:22,646:INFO:Starting cross validation
2024-08-30 18:28:22,648:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:28:37,474:INFO:Calculating mean and std
2024-08-30 18:28:37,475:INFO:Creating metrics dataframe
2024-08-30 18:28:37,479:INFO:Uploading results into container
2024-08-30 18:28:37,480:INFO:Uploading model into container now
2024-08-30 18:28:37,481:INFO:_master_model_container: 8
2024-08-30 18:28:37,481:INFO:_display_container: 2
2024-08-30 18:28:37,481:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-30 18:28:37,482:INFO:create_model() successfully completed......................................
2024-08-30 18:28:37,571:INFO:SubProcess create_model() end ==================================
2024-08-30 18:28:37,572:INFO:Creating metrics dataframe
2024-08-30 18:28:37,584:INFO:Initializing Linear Discriminant Analysis
2024-08-30 18:28:37,585:INFO:Total runtime is 2.235365120569865 minutes
2024-08-30 18:28:37,590:INFO:SubProcess create_model() called ==================================
2024-08-30 18:28:37,590:INFO:Initializing create_model()
2024-08-30 18:28:37,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:28:37,591:INFO:Checking exceptions
2024-08-30 18:28:37,591:INFO:Importing libraries
2024-08-30 18:28:37,591:INFO:Copying training dataset
2024-08-30 18:28:38,018:INFO:Defining folds
2024-08-30 18:28:38,018:INFO:Declaring metric variables
2024-08-30 18:28:38,023:INFO:Importing untrained model
2024-08-30 18:28:38,028:INFO:Linear Discriminant Analysis Imported successfully
2024-08-30 18:28:38,039:INFO:Starting cross validation
2024-08-30 18:28:38,041:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:28:38,644:WARNING:create_model() for lda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-30 18:28:38,645:WARNING:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:28:38,645:INFO:Initializing create_model()
2024-08-30 18:28:38,645:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:28:38,645:INFO:Checking exceptions
2024-08-30 18:28:38,645:INFO:Importing libraries
2024-08-30 18:28:38,645:INFO:Copying training dataset
2024-08-30 18:28:39,107:INFO:Defining folds
2024-08-30 18:28:39,108:INFO:Declaring metric variables
2024-08-30 18:28:39,112:INFO:Importing untrained model
2024-08-30 18:28:39,117:INFO:Linear Discriminant Analysis Imported successfully
2024-08-30 18:28:39,126:INFO:Starting cross validation
2024-08-30 18:28:39,128:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:28:39,719:ERROR:create_model() for lda raised an exception or returned all 0.0:
2024-08-30 18:28:39,725:ERROR:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:28:39,732:INFO:Initializing Extra Trees Classifier
2024-08-30 18:28:39,732:INFO:Total runtime is 2.2711474935213727 minutes
2024-08-30 18:28:39,748:INFO:SubProcess create_model() called ==================================
2024-08-30 18:28:39,750:INFO:Initializing create_model()
2024-08-30 18:28:39,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:28:39,752:INFO:Checking exceptions
2024-08-30 18:28:39,752:INFO:Importing libraries
2024-08-30 18:28:39,752:INFO:Copying training dataset
2024-08-30 18:28:40,199:INFO:Defining folds
2024-08-30 18:28:40,200:INFO:Declaring metric variables
2024-08-30 18:28:40,205:INFO:Importing untrained model
2024-08-30 18:28:40,211:INFO:Extra Trees Classifier Imported successfully
2024-08-30 18:28:40,222:INFO:Starting cross validation
2024-08-30 18:28:40,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:29:39,552:INFO:Calculating mean and std
2024-08-30 18:29:39,554:INFO:Creating metrics dataframe
2024-08-30 18:29:39,559:INFO:Uploading results into container
2024-08-30 18:29:39,560:INFO:Uploading model into container now
2024-08-30 18:29:39,560:INFO:_master_model_container: 9
2024-08-30 18:29:39,561:INFO:_display_container: 2
2024-08-30 18:29:39,561:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:29:39,562:INFO:create_model() successfully completed......................................
2024-08-30 18:29:39,684:INFO:SubProcess create_model() end ==================================
2024-08-30 18:29:39,685:INFO:Creating metrics dataframe
2024-08-30 18:29:39,699:INFO:Initializing Extreme Gradient Boosting
2024-08-30 18:29:39,700:INFO:Total runtime is 3.270611584186554 minutes
2024-08-30 18:29:39,704:INFO:SubProcess create_model() called ==================================
2024-08-30 18:29:39,705:INFO:Initializing create_model()
2024-08-30 18:29:39,705:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:29:39,705:INFO:Checking exceptions
2024-08-30 18:29:39,705:INFO:Importing libraries
2024-08-30 18:29:39,705:INFO:Copying training dataset
2024-08-30 18:29:40,146:INFO:Defining folds
2024-08-30 18:29:40,146:INFO:Declaring metric variables
2024-08-30 18:29:40,151:INFO:Importing untrained model
2024-08-30 18:29:40,156:INFO:Extreme Gradient Boosting Imported successfully
2024-08-30 18:29:40,164:INFO:Starting cross validation
2024-08-30 18:29:40,166:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:29:41,137:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:41,139:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:41,364:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:41,388:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:41,394:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:41,409:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:41,460:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:41,466:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:41,484:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:41,490:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,317:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,336:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,367:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,386:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,603:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,622:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,645:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,645:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,656:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,667:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,677:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,683:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,693:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,701:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,705:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,720:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,725:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,741:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,744:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,756:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:29:43,810:INFO:Calculating mean and std
2024-08-30 18:29:43,812:INFO:Creating metrics dataframe
2024-08-30 18:29:43,816:INFO:Uploading results into container
2024-08-30 18:29:43,817:INFO:Uploading model into container now
2024-08-30 18:29:43,817:INFO:_master_model_container: 10
2024-08-30 18:29:43,818:INFO:_display_container: 2
2024-08-30 18:29:43,819:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-30 18:29:43,819:INFO:create_model() successfully completed......................................
2024-08-30 18:29:43,915:INFO:SubProcess create_model() end ==================================
2024-08-30 18:29:43,915:INFO:Creating metrics dataframe
2024-08-30 18:29:43,931:INFO:Initializing Light Gradient Boosting Machine
2024-08-30 18:29:43,932:INFO:Total runtime is 3.341142729918162 minutes
2024-08-30 18:29:43,936:INFO:SubProcess create_model() called ==================================
2024-08-30 18:29:43,937:INFO:Initializing create_model()
2024-08-30 18:29:43,937:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:29:43,937:INFO:Checking exceptions
2024-08-30 18:29:43,937:INFO:Importing libraries
2024-08-30 18:29:43,937:INFO:Copying training dataset
2024-08-30 18:29:44,352:INFO:Defining folds
2024-08-30 18:29:44,353:INFO:Declaring metric variables
2024-08-30 18:29:44,358:INFO:Importing untrained model
2024-08-30 18:29:44,363:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-30 18:29:44,373:INFO:Starting cross validation
2024-08-30 18:29:44,374:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:29:49,046:INFO:Calculating mean and std
2024-08-30 18:29:49,048:INFO:Creating metrics dataframe
2024-08-30 18:29:49,053:INFO:Uploading results into container
2024-08-30 18:29:49,054:INFO:Uploading model into container now
2024-08-30 18:29:49,055:INFO:_master_model_container: 11
2024-08-30 18:29:49,055:INFO:_display_container: 2
2024-08-30 18:29:49,056:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-30 18:29:49,056:INFO:create_model() successfully completed......................................
2024-08-30 18:29:49,210:INFO:SubProcess create_model() end ==================================
2024-08-30 18:29:49,210:INFO:Creating metrics dataframe
2024-08-30 18:29:49,224:INFO:Initializing Dummy Classifier
2024-08-30 18:29:49,224:INFO:Total runtime is 3.4293419480323792 minutes
2024-08-30 18:29:49,229:INFO:SubProcess create_model() called ==================================
2024-08-30 18:29:49,229:INFO:Initializing create_model()
2024-08-30 18:29:49,229:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000217082C0AF0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:29:49,230:INFO:Checking exceptions
2024-08-30 18:29:49,230:INFO:Importing libraries
2024-08-30 18:29:49,230:INFO:Copying training dataset
2024-08-30 18:29:49,664:INFO:Defining folds
2024-08-30 18:29:49,665:INFO:Declaring metric variables
2024-08-30 18:29:49,669:INFO:Importing untrained model
2024-08-30 18:29:49,674:INFO:Dummy Classifier Imported successfully
2024-08-30 18:29:49,682:INFO:Starting cross validation
2024-08-30 18:29:49,684:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:29:50,153:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-30 18:29:50,172:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-30 18:29:50,191:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-30 18:29:50,266:INFO:Calculating mean and std
2024-08-30 18:29:50,267:INFO:Creating metrics dataframe
2024-08-30 18:29:50,273:INFO:Uploading results into container
2024-08-30 18:29:50,273:INFO:Uploading model into container now
2024-08-30 18:29:50,274:INFO:_master_model_container: 12
2024-08-30 18:29:50,274:INFO:_display_container: 2
2024-08-30 18:29:50,274:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-30 18:29:50,274:INFO:create_model() successfully completed......................................
2024-08-30 18:29:50,363:INFO:SubProcess create_model() end ==================================
2024-08-30 18:29:50,363:INFO:Creating metrics dataframe
2024-08-30 18:29:50,389:INFO:Initializing create_model()
2024-08-30 18:29:50,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:29:50,390:INFO:Checking exceptions
2024-08-30 18:29:50,392:INFO:Importing libraries
2024-08-30 18:29:50,392:INFO:Copying training dataset
2024-08-30 18:29:50,842:INFO:Defining folds
2024-08-30 18:29:50,842:INFO:Declaring metric variables
2024-08-30 18:29:50,843:INFO:Importing untrained model
2024-08-30 18:29:50,843:INFO:Declaring custom model
2024-08-30 18:29:50,844:INFO:Extra Trees Classifier Imported successfully
2024-08-30 18:29:50,845:INFO:Cross validation set to False
2024-08-30 18:29:50,845:INFO:Fitting Model
2024-08-30 18:29:57,112:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:29:57,112:INFO:create_model() successfully completed......................................
2024-08-30 18:29:57,236:INFO:_master_model_container: 12
2024-08-30 18:29:57,237:INFO:_display_container: 2
2024-08-30 18:29:57,238:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:29:57,238:INFO:compare_models() successfully completed......................................
2024-08-30 18:29:57,278:INFO:Initializing tune_model()
2024-08-30 18:29:57,279:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>)
2024-08-30 18:29:57,279:INFO:Checking exceptions
2024-08-30 18:29:57,446:INFO:Copying training dataset
2024-08-30 18:29:57,727:INFO:Checking base model
2024-08-30 18:29:57,728:INFO:Base model : Extra Trees Classifier
2024-08-30 18:29:57,734:INFO:Declaring metric variables
2024-08-30 18:29:57,738:INFO:Defining Hyperparameters
2024-08-30 18:29:57,828:INFO:Tuning with n_jobs=-1
2024-08-30 18:29:57,828:INFO:Initializing RandomizedSearchCV
2024-08-30 18:31:25,602:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2024-08-30 18:31:25,606:INFO:Hyperparameter search completed
2024-08-30 18:31:25,607:INFO:SubProcess create_model() called ==================================
2024-08-30 18:31:25,608:INFO:Initializing create_model()
2024-08-30 18:31:25,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170E3EC5E0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2024-08-30 18:31:25,609:INFO:Checking exceptions
2024-08-30 18:31:25,610:INFO:Importing libraries
2024-08-30 18:31:25,610:INFO:Copying training dataset
2024-08-30 18:31:26,149:INFO:Defining folds
2024-08-30 18:31:26,149:INFO:Declaring metric variables
2024-08-30 18:31:26,155:INFO:Importing untrained model
2024-08-30 18:31:26,155:INFO:Declaring custom model
2024-08-30 18:31:26,162:INFO:Extra Trees Classifier Imported successfully
2024-08-30 18:31:26,172:INFO:Starting cross validation
2024-08-30 18:31:26,174:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:32:03,061:INFO:Calculating mean and std
2024-08-30 18:32:03,063:INFO:Creating metrics dataframe
2024-08-30 18:32:03,071:INFO:Finalizing model
2024-08-30 18:32:07,253:INFO:Uploading results into container
2024-08-30 18:32:07,255:INFO:Uploading model into container now
2024-08-30 18:32:07,255:INFO:_master_model_container: 13
2024-08-30 18:32:07,256:INFO:_display_container: 3
2024-08-30 18:32:07,256:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=6, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0,
                     min_samples_leaf=4, min_samples_split=7,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=200, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2024-08-30 18:32:07,257:INFO:create_model() successfully completed......................................
2024-08-30 18:32:07,385:INFO:SubProcess create_model() end ==================================
2024-08-30 18:32:07,385:INFO:choose_better activated
2024-08-30 18:32:07,389:INFO:SubProcess create_model() called ==================================
2024-08-30 18:32:07,390:INFO:Initializing create_model()
2024-08-30 18:32:07,390:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:32:07,390:INFO:Checking exceptions
2024-08-30 18:32:07,393:INFO:Importing libraries
2024-08-30 18:32:07,393:INFO:Copying training dataset
2024-08-30 18:32:07,845:INFO:Defining folds
2024-08-30 18:32:07,845:INFO:Declaring metric variables
2024-08-30 18:32:07,846:INFO:Importing untrained model
2024-08-30 18:32:07,846:INFO:Declaring custom model
2024-08-30 18:32:07,846:INFO:Extra Trees Classifier Imported successfully
2024-08-30 18:32:07,847:INFO:Starting cross validation
2024-08-30 18:32:07,847:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:33:06,053:INFO:Calculating mean and std
2024-08-30 18:33:06,053:INFO:Creating metrics dataframe
2024-08-30 18:33:06,055:INFO:Finalizing model
2024-08-30 18:33:12,471:INFO:Uploading results into container
2024-08-30 18:33:12,472:INFO:Uploading model into container now
2024-08-30 18:33:12,473:INFO:_master_model_container: 14
2024-08-30 18:33:12,473:INFO:_display_container: 4
2024-08-30 18:33:12,473:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:33:12,473:INFO:create_model() successfully completed......................................
2024-08-30 18:33:12,579:INFO:SubProcess create_model() end ==================================
2024-08-30 18:33:12,580:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for Accuracy is 0.9761
2024-08-30 18:33:12,581:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=6, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0,
                     min_samples_leaf=4, min_samples_split=7,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=200, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for Accuracy is 0.8841
2024-08-30 18:33:12,581:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2024-08-30 18:33:12,581:INFO:choose_better completed
2024-08-30 18:33:12,581:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-08-30 18:33:12,597:INFO:_master_model_container: 14
2024-08-30 18:33:12,597:INFO:_display_container: 3
2024-08-30 18:33:12,598:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:33:12,598:INFO:tune_model() successfully completed......................................
2024-08-30 18:33:12,872:INFO:Initializing finalize_model()
2024-08-30 18:33:12,872:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-08-30 18:33:12,873:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:33:12,880:INFO:Initializing create_model()
2024-08-30 18:33:12,880:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:33:12,880:INFO:Checking exceptions
2024-08-30 18:33:12,883:INFO:Importing libraries
2024-08-30 18:33:12,883:INFO:Copying training dataset
2024-08-30 18:33:12,886:INFO:Defining folds
2024-08-30 18:33:12,886:INFO:Declaring metric variables
2024-08-30 18:33:12,887:INFO:Importing untrained model
2024-08-30 18:33:12,887:INFO:Declaring custom model
2024-08-30 18:33:12,888:INFO:Extra Trees Classifier Imported successfully
2024-08-30 18:33:12,889:INFO:Cross validation set to False
2024-08-30 18:33:12,889:INFO:Fitting Model
2024-08-30 18:33:24,459:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-08-30 18:33:24,459:INFO:create_model() successfully completed......................................
2024-08-30 18:33:24,555:INFO:_master_model_container: 14
2024-08-30 18:33:24,556:INFO:_display_container: 3
2024-08-30 18:33:24,562:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-08-30 18:33:24,563:INFO:finalize_model() successfully completed......................................
2024-08-30 18:35:50,232:INFO:Initializing tune_model()
2024-08-30 18:35:50,232:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>)
2024-08-30 18:35:50,232:INFO:Checking exceptions
2024-08-30 18:35:50,396:INFO:Copying training dataset
2024-08-30 18:35:50,715:INFO:Checking base model
2024-08-30 18:35:50,715:INFO:Base model : Extra Trees Classifier
2024-08-30 18:35:50,719:INFO:Declaring metric variables
2024-08-30 18:35:50,724:INFO:Defining Hyperparameters
2024-08-30 18:35:50,821:INFO:Tuning with n_jobs=-1
2024-08-30 18:35:50,822:INFO:Initializing RandomizedSearchCV
2024-08-30 18:37:04,428:INFO:Initializing compare_models()
2024-08-30 18:37:04,428:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, include=None, fold=None, round=4, cross_validation=True, sort=AUC, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'AUC', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-08-30 18:37:04,428:INFO:Checking exceptions
2024-08-30 18:37:04,584:INFO:Preparing display monitor
2024-08-30 18:37:04,616:INFO:Initializing Logistic Regression
2024-08-30 18:37:04,617:INFO:Total runtime is 1.662572224934896e-05 minutes
2024-08-30 18:37:04,622:INFO:SubProcess create_model() called ==================================
2024-08-30 18:37:04,622:INFO:Initializing create_model()
2024-08-30 18:37:04,623:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002171E82EBC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:37:04,623:INFO:Checking exceptions
2024-08-30 18:37:04,623:INFO:Importing libraries
2024-08-30 18:37:04,623:INFO:Copying training dataset
2024-08-30 18:37:05,044:INFO:Defining folds
2024-08-30 18:37:05,044:INFO:Declaring metric variables
2024-08-30 18:37:05,048:INFO:Importing untrained model
2024-08-30 18:37:05,053:INFO:Logistic Regression Imported successfully
2024-08-30 18:37:05,062:INFO:Starting cross validation
2024-08-30 18:37:05,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:37:11,963:INFO:Calculating mean and std
2024-08-30 18:37:11,965:INFO:Creating metrics dataframe
2024-08-30 18:37:11,972:INFO:Uploading results into container
2024-08-30 18:37:11,974:INFO:Uploading model into container now
2024-08-30 18:37:11,975:INFO:_master_model_container: 15
2024-08-30 18:37:11,975:INFO:_display_container: 4
2024-08-30 18:37:11,976:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-30 18:37:11,976:INFO:create_model() successfully completed......................................
2024-08-30 18:37:12,141:INFO:SubProcess create_model() end ==================================
2024-08-30 18:37:12,148:INFO:Creating metrics dataframe
2024-08-30 18:37:12,159:INFO:Initializing K Neighbors Classifier
2024-08-30 18:37:12,159:INFO:Total runtime is 0.12571243842442828 minutes
2024-08-30 18:37:12,164:INFO:SubProcess create_model() called ==================================
2024-08-30 18:37:12,164:INFO:Initializing create_model()
2024-08-30 18:37:12,164:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002171E82EBC0>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:37:12,164:INFO:Checking exceptions
2024-08-30 18:37:12,164:INFO:Importing libraries
2024-08-30 18:37:12,164:INFO:Copying training dataset
2024-08-30 18:37:12,577:INFO:Defining folds
2024-08-30 18:37:12,578:INFO:Declaring metric variables
2024-08-30 18:37:12,582:INFO:Importing untrained model
2024-08-30 18:37:12,588:INFO:K Neighbors Classifier Imported successfully
2024-08-30 18:37:12,597:INFO:Starting cross validation
2024-08-30 18:37:12,598:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:38:01,264:INFO:Initializing predict_model()
2024-08-30 18:38:01,265:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002170F34A3B0>)
2024-08-30 18:38:01,265:INFO:Checking exceptions
2024-08-30 18:38:01,265:INFO:Preloading libraries
2024-08-30 18:43:55,218:INFO:Initializing predict_model()
2024-08-30 18:43:55,218:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217675CF490>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002170EDFDD80>)
2024-08-30 18:43:55,218:INFO:Checking exceptions
2024-08-30 18:43:55,218:INFO:Preloading libraries
2024-08-30 18:48:16,328:INFO:PyCaret ClassificationExperiment
2024-08-30 18:48:16,328:INFO:Logging name: clf-default-name
2024-08-30 18:48:16,328:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-30 18:48:16,328:INFO:version 3.3.2
2024-08-30 18:48:16,328:INFO:Initializing setup()
2024-08-30 18:48:16,328:INFO:self.USI: c69b
2024-08-30 18:48:16,328:INFO:self._variable_keys: {'data', 'X', 'exp_id', 'idx', 'X_train', 'is_multiclass', 'y_train', '_ml_usecase', 'exp_name_log', 'y_test', '_available_plots', 'USI', 'n_jobs_param', 'log_plots_param', 'seed', 'fold_shuffle_param', 'X_test', 'pipeline', 'fix_imbalance', 'html_param', 'logging_param', 'memory', 'gpu_param', 'gpu_n_jobs_param', 'fold_groups_param', 'y', 'target_param', 'fold_generator'}
2024-08-30 18:48:16,328:INFO:Checking environment
2024-08-30 18:48:16,328:INFO:python_version: 3.10.14
2024-08-30 18:48:16,328:INFO:python_build: ('main', 'Mar 20 2024 12:40:08')
2024-08-30 18:48:16,329:INFO:machine: AMD64
2024-08-30 18:48:16,329:INFO:platform: Windows-10-10.0.22631-SP0
2024-08-30 18:48:16,337:INFO:Memory: svmem(total=33737760768, available=19252916224, percent=42.9, used=14484844544, free=19252916224)
2024-08-30 18:48:16,337:INFO:Physical Core: 8
2024-08-30 18:48:16,337:INFO:Logical Core: 16
2024-08-30 18:48:16,337:INFO:Checking libraries
2024-08-30 18:48:16,337:INFO:System:
2024-08-30 18:48:16,337:INFO:    python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:40:08) [MSC v.1938 64 bit (AMD64)]
2024-08-30 18:48:16,337:INFO:executable: c:\Users\Guill\miniconda3\envs\term_deposit\python.exe
2024-08-30 18:48:16,337:INFO:   machine: Windows-10-10.0.22631-SP0
2024-08-30 18:48:16,337:INFO:PyCaret required dependencies:
2024-08-30 18:48:16,338:INFO:                 pip: 24.2
2024-08-30 18:48:16,338:INFO:          setuptools: 72.2.0
2024-08-30 18:48:16,338:INFO:             pycaret: 3.3.2
2024-08-30 18:48:16,338:INFO:             IPython: 8.26.0
2024-08-30 18:48:16,338:INFO:          ipywidgets: 8.1.5
2024-08-30 18:48:16,338:INFO:                tqdm: 4.66.5
2024-08-30 18:48:16,338:INFO:               numpy: 1.23.5
2024-08-30 18:48:16,338:INFO:              pandas: 1.5.3
2024-08-30 18:48:16,338:INFO:              jinja2: 3.1.4
2024-08-30 18:48:16,338:INFO:               scipy: 1.11.4
2024-08-30 18:48:16,338:INFO:              joblib: 1.3.2
2024-08-30 18:48:16,338:INFO:             sklearn: 1.4.2
2024-08-30 18:48:16,338:INFO:                pyod: 2.0.1
2024-08-30 18:48:16,338:INFO:            imblearn: 0.12.3
2024-08-30 18:48:16,338:INFO:   category_encoders: 2.6.3
2024-08-30 18:48:16,338:INFO:            lightgbm: 4.5.0
2024-08-30 18:48:16,338:INFO:               numba: 0.60.0
2024-08-30 18:48:16,338:INFO:            requests: 2.32.3
2024-08-30 18:48:16,338:INFO:          matplotlib: 3.7.5
2024-08-30 18:48:16,338:INFO:          scikitplot: 0.3.7
2024-08-30 18:48:16,338:INFO:         yellowbrick: 1.5
2024-08-30 18:48:16,339:INFO:              plotly: 5.23.0
2024-08-30 18:48:16,339:INFO:    plotly-resampler: Not installed
2024-08-30 18:48:16,339:INFO:             kaleido: 0.2.1
2024-08-30 18:48:16,339:INFO:           schemdraw: 0.15
2024-08-30 18:48:16,339:INFO:         statsmodels: 0.14.2
2024-08-30 18:48:16,339:INFO:              sktime: 0.26.0
2024-08-30 18:48:16,339:INFO:               tbats: 1.1.3
2024-08-30 18:48:16,339:INFO:            pmdarima: 2.0.4
2024-08-30 18:48:16,339:INFO:              psutil: 6.0.0
2024-08-30 18:48:16,339:INFO:          markupsafe: 2.1.5
2024-08-30 18:48:16,339:INFO:             pickle5: Not installed
2024-08-30 18:48:16,339:INFO:         cloudpickle: 3.0.0
2024-08-30 18:48:16,339:INFO:         deprecation: 2.1.0
2024-08-30 18:48:16,339:INFO:              xxhash: 3.5.0
2024-08-30 18:48:16,339:INFO:           wurlitzer: Not installed
2024-08-30 18:48:16,339:INFO:PyCaret optional dependencies:
2024-08-30 18:48:16,340:INFO:                shap: 0.43.0
2024-08-30 18:48:16,340:INFO:           interpret: Not installed
2024-08-30 18:48:16,340:INFO:                umap: Not installed
2024-08-30 18:48:16,340:INFO:     ydata_profiling: Not installed
2024-08-30 18:48:16,340:INFO:  explainerdashboard: Not installed
2024-08-30 18:48:16,340:INFO:             autoviz: Not installed
2024-08-30 18:48:16,340:INFO:           fairlearn: Not installed
2024-08-30 18:48:16,340:INFO:          deepchecks: Not installed
2024-08-30 18:48:16,340:INFO:             xgboost: 2.1.1
2024-08-30 18:48:16,340:INFO:            catboost: Not installed
2024-08-30 18:48:16,340:INFO:              kmodes: Not installed
2024-08-30 18:48:16,340:INFO:             mlxtend: Not installed
2024-08-30 18:48:16,340:INFO:       statsforecast: Not installed
2024-08-30 18:48:16,340:INFO:        tune_sklearn: Not installed
2024-08-30 18:48:16,340:INFO:                 ray: 2.35.0
2024-08-30 18:48:16,340:INFO:            hyperopt: Not installed
2024-08-30 18:48:16,340:INFO:              optuna: Not installed
2024-08-30 18:48:16,341:INFO:               skopt: Not installed
2024-08-30 18:48:16,341:INFO:              mlflow: 2.16.0
2024-08-30 18:48:16,341:INFO:              gradio: Not installed
2024-08-30 18:48:16,341:INFO:             fastapi: Not installed
2024-08-30 18:48:16,341:INFO:             uvicorn: Not installed
2024-08-30 18:48:16,341:INFO:              m2cgen: Not installed
2024-08-30 18:48:16,341:INFO:           evidently: Not installed
2024-08-30 18:48:16,341:INFO:               fugue: Not installed
2024-08-30 18:48:16,341:INFO:           streamlit: Not installed
2024-08-30 18:48:16,341:INFO:             prophet: Not installed
2024-08-30 18:48:16,341:INFO:None
2024-08-30 18:48:16,341:INFO:Set up data.
2024-08-30 18:48:16,380:INFO:Set up folding strategy.
2024-08-30 18:48:16,380:INFO:Set up train/test split.
2024-08-30 18:48:16,631:INFO:Set up index.
2024-08-30 18:48:16,635:INFO:Assigning column types.
2024-08-30 18:48:16,643:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-30 18:48:16,692:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-30 18:48:16,693:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 18:48:16,724:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:48:16,727:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:48:16,776:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-30 18:48:16,777:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 18:48:16,809:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:48:16,812:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:48:16,813:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-30 18:48:16,864:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 18:48:16,896:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:48:16,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:48:16,950:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 18:48:16,981:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:48:16,985:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:48:16,985:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-30 18:48:17,067:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:48:17,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:48:17,150:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:48:17,154:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:48:17,156:INFO:Preparing preprocessing pipeline...
2024-08-30 18:48:17,157:INFO:Set up simple imputation.
2024-08-30 18:48:17,534:INFO:Finished creating preprocessing pipeline.
2024-08-30 18:48:17,538:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Guill\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'fea...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-08-30 18:48:17,538:INFO:Creating final display dataframe.
2024-08-30 18:48:18,648:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                 y
2                   Target type            Binary
3           Original data shape       (59308, 45)
4        Transformed data shape       (59308, 45)
5   Transformed train set shape       (41515, 45)
6    Transformed test set shape       (17793, 45)
7              Numeric features                44
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              c69b
2024-08-30 18:48:18,738:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:48:18,741:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:48:18,823:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 18:48:18,826:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 18:48:18,827:INFO:setup() successfully completed in 2.51s...............
2024-08-30 18:48:18,861:INFO:Initializing compare_models()
2024-08-30 18:48:18,862:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-08-30 18:48:18,862:INFO:Checking exceptions
2024-08-30 18:48:19,007:INFO:Preparing display monitor
2024-08-30 18:48:19,036:INFO:Initializing Logistic Regression
2024-08-30 18:48:19,037:INFO:Total runtime is 1.6816457112630208e-05 minutes
2024-08-30 18:48:19,041:INFO:SubProcess create_model() called ==================================
2024-08-30 18:48:19,041:INFO:Initializing create_model()
2024-08-30 18:48:19,042:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:48:19,042:INFO:Checking exceptions
2024-08-30 18:48:19,042:INFO:Importing libraries
2024-08-30 18:48:19,042:INFO:Copying training dataset
2024-08-30 18:48:19,469:INFO:Defining folds
2024-08-30 18:48:19,470:INFO:Declaring metric variables
2024-08-30 18:48:19,474:INFO:Importing untrained model
2024-08-30 18:48:19,479:INFO:Logistic Regression Imported successfully
2024-08-30 18:48:19,489:INFO:Starting cross validation
2024-08-30 18:48:19,490:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:48:24,900:INFO:Calculating mean and std
2024-08-30 18:48:24,902:INFO:Creating metrics dataframe
2024-08-30 18:48:24,906:INFO:Uploading results into container
2024-08-30 18:48:24,906:INFO:Uploading model into container now
2024-08-30 18:48:24,907:INFO:_master_model_container: 1
2024-08-30 18:48:24,907:INFO:_display_container: 2
2024-08-30 18:48:24,908:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-30 18:48:24,908:INFO:create_model() successfully completed......................................
2024-08-30 18:48:25,085:INFO:SubProcess create_model() end ==================================
2024-08-30 18:48:25,085:INFO:Creating metrics dataframe
2024-08-30 18:48:25,095:INFO:Initializing K Neighbors Classifier
2024-08-30 18:48:25,095:INFO:Total runtime is 0.10098435878753662 minutes
2024-08-30 18:48:25,099:INFO:SubProcess create_model() called ==================================
2024-08-30 18:48:25,099:INFO:Initializing create_model()
2024-08-30 18:48:25,100:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:48:25,100:INFO:Checking exceptions
2024-08-30 18:48:25,100:INFO:Importing libraries
2024-08-30 18:48:25,100:INFO:Copying training dataset
2024-08-30 18:48:25,526:INFO:Defining folds
2024-08-30 18:48:25,526:INFO:Declaring metric variables
2024-08-30 18:48:25,532:INFO:Importing untrained model
2024-08-30 18:48:25,547:INFO:K Neighbors Classifier Imported successfully
2024-08-30 18:48:25,558:INFO:Starting cross validation
2024-08-30 18:48:25,559:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:49:20,201:INFO:Calculating mean and std
2024-08-30 18:49:20,202:INFO:Creating metrics dataframe
2024-08-30 18:49:20,207:INFO:Uploading results into container
2024-08-30 18:49:20,208:INFO:Uploading model into container now
2024-08-30 18:49:20,209:INFO:_master_model_container: 2
2024-08-30 18:49:20,209:INFO:_display_container: 2
2024-08-30 18:49:20,209:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-30 18:49:20,210:INFO:create_model() successfully completed......................................
2024-08-30 18:49:20,398:INFO:SubProcess create_model() end ==================================
2024-08-30 18:49:20,398:INFO:Creating metrics dataframe
2024-08-30 18:49:20,411:INFO:Initializing Naive Bayes
2024-08-30 18:49:20,411:INFO:Total runtime is 1.0229127526283264 minutes
2024-08-30 18:49:20,415:INFO:SubProcess create_model() called ==================================
2024-08-30 18:49:20,416:INFO:Initializing create_model()
2024-08-30 18:49:20,416:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:49:20,416:INFO:Checking exceptions
2024-08-30 18:49:20,416:INFO:Importing libraries
2024-08-30 18:49:20,416:INFO:Copying training dataset
2024-08-30 18:49:20,860:INFO:Defining folds
2024-08-30 18:49:20,861:INFO:Declaring metric variables
2024-08-30 18:49:20,867:INFO:Importing untrained model
2024-08-30 18:49:20,872:INFO:Naive Bayes Imported successfully
2024-08-30 18:49:20,881:INFO:Starting cross validation
2024-08-30 18:49:20,883:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:49:21,466:WARNING:create_model() for nb raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-30 18:49:21,467:WARNING:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:49:21,468:INFO:Initializing create_model()
2024-08-30 18:49:21,468:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:49:21,468:INFO:Checking exceptions
2024-08-30 18:49:21,468:INFO:Importing libraries
2024-08-30 18:49:21,468:INFO:Copying training dataset
2024-08-30 18:49:21,900:INFO:Defining folds
2024-08-30 18:49:21,901:INFO:Declaring metric variables
2024-08-30 18:49:21,906:INFO:Importing untrained model
2024-08-30 18:49:21,911:INFO:Naive Bayes Imported successfully
2024-08-30 18:49:21,919:INFO:Starting cross validation
2024-08-30 18:49:21,922:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:49:22,546:ERROR:create_model() for nb raised an exception or returned all 0.0:
2024-08-30 18:49:22,548:ERROR:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:49:22,550:INFO:Initializing Decision Tree Classifier
2024-08-30 18:49:22,550:INFO:Total runtime is 1.0585675716400147 minutes
2024-08-30 18:49:22,555:INFO:SubProcess create_model() called ==================================
2024-08-30 18:49:22,555:INFO:Initializing create_model()
2024-08-30 18:49:22,556:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:49:22,556:INFO:Checking exceptions
2024-08-30 18:49:22,556:INFO:Importing libraries
2024-08-30 18:49:22,556:INFO:Copying training dataset
2024-08-30 18:49:22,976:INFO:Defining folds
2024-08-30 18:49:22,977:INFO:Declaring metric variables
2024-08-30 18:49:22,983:INFO:Importing untrained model
2024-08-30 18:49:22,988:INFO:Decision Tree Classifier Imported successfully
2024-08-30 18:49:22,998:INFO:Starting cross validation
2024-08-30 18:49:23,000:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:49:25,905:INFO:Calculating mean and std
2024-08-30 18:49:25,907:INFO:Creating metrics dataframe
2024-08-30 18:49:25,912:INFO:Uploading results into container
2024-08-30 18:49:25,913:INFO:Uploading model into container now
2024-08-30 18:49:25,914:INFO:_master_model_container: 3
2024-08-30 18:49:25,914:INFO:_display_container: 2
2024-08-30 18:49:25,914:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-30 18:49:25,914:INFO:create_model() successfully completed......................................
2024-08-30 18:49:26,070:INFO:SubProcess create_model() end ==================================
2024-08-30 18:49:26,070:INFO:Creating metrics dataframe
2024-08-30 18:49:26,082:INFO:Initializing SVM - Linear Kernel
2024-08-30 18:49:26,082:INFO:Total runtime is 1.1174448966979982 minutes
2024-08-30 18:49:26,087:INFO:SubProcess create_model() called ==================================
2024-08-30 18:49:26,088:INFO:Initializing create_model()
2024-08-30 18:49:26,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:49:26,088:INFO:Checking exceptions
2024-08-30 18:49:26,088:INFO:Importing libraries
2024-08-30 18:49:26,088:INFO:Copying training dataset
2024-08-30 18:49:26,519:INFO:Defining folds
2024-08-30 18:49:26,519:INFO:Declaring metric variables
2024-08-30 18:49:26,524:INFO:Importing untrained model
2024-08-30 18:49:26,529:INFO:SVM - Linear Kernel Imported successfully
2024-08-30 18:49:26,538:INFO:Starting cross validation
2024-08-30 18:49:26,539:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:49:27,545:INFO:Calculating mean and std
2024-08-30 18:49:27,546:INFO:Creating metrics dataframe
2024-08-30 18:49:27,551:INFO:Uploading results into container
2024-08-30 18:49:27,551:INFO:Uploading model into container now
2024-08-30 18:49:27,553:INFO:_master_model_container: 4
2024-08-30 18:49:27,553:INFO:_display_container: 2
2024-08-30 18:49:27,554:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-30 18:49:27,554:INFO:create_model() successfully completed......................................
2024-08-30 18:49:27,718:INFO:SubProcess create_model() end ==================================
2024-08-30 18:49:27,718:INFO:Creating metrics dataframe
2024-08-30 18:49:27,731:INFO:Initializing Ridge Classifier
2024-08-30 18:49:27,731:INFO:Total runtime is 1.1449244419733684 minutes
2024-08-30 18:49:27,736:INFO:SubProcess create_model() called ==================================
2024-08-30 18:49:27,736:INFO:Initializing create_model()
2024-08-30 18:49:27,736:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:49:27,736:INFO:Checking exceptions
2024-08-30 18:49:27,736:INFO:Importing libraries
2024-08-30 18:49:27,737:INFO:Copying training dataset
2024-08-30 18:49:28,170:INFO:Defining folds
2024-08-30 18:49:28,171:INFO:Declaring metric variables
2024-08-30 18:49:28,176:INFO:Importing untrained model
2024-08-30 18:49:28,181:INFO:Ridge Classifier Imported successfully
2024-08-30 18:49:28,190:INFO:Starting cross validation
2024-08-30 18:49:28,192:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:49:29,134:INFO:Calculating mean and std
2024-08-30 18:49:29,135:INFO:Creating metrics dataframe
2024-08-30 18:49:29,140:INFO:Uploading results into container
2024-08-30 18:49:29,140:INFO:Uploading model into container now
2024-08-30 18:49:29,141:INFO:_master_model_container: 5
2024-08-30 18:49:29,141:INFO:_display_container: 2
2024-08-30 18:49:29,142:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-08-30 18:49:29,142:INFO:create_model() successfully completed......................................
2024-08-30 18:49:29,353:INFO:SubProcess create_model() end ==================================
2024-08-30 18:49:29,355:INFO:Creating metrics dataframe
2024-08-30 18:49:29,368:INFO:Initializing Random Forest Classifier
2024-08-30 18:49:29,369:INFO:Total runtime is 1.1722139676411947 minutes
2024-08-30 18:49:29,374:INFO:SubProcess create_model() called ==================================
2024-08-30 18:49:29,374:INFO:Initializing create_model()
2024-08-30 18:49:29,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:49:29,374:INFO:Checking exceptions
2024-08-30 18:49:29,375:INFO:Importing libraries
2024-08-30 18:49:29,375:INFO:Copying training dataset
2024-08-30 18:49:29,801:INFO:Defining folds
2024-08-30 18:49:29,802:INFO:Declaring metric variables
2024-08-30 18:49:29,807:INFO:Importing untrained model
2024-08-30 18:49:29,811:INFO:Random Forest Classifier Imported successfully
2024-08-30 18:49:29,821:INFO:Starting cross validation
2024-08-30 18:49:29,822:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:50:02,899:INFO:Calculating mean and std
2024-08-30 18:50:02,901:INFO:Creating metrics dataframe
2024-08-30 18:50:02,905:INFO:Uploading results into container
2024-08-30 18:50:02,906:INFO:Uploading model into container now
2024-08-30 18:50:02,907:INFO:_master_model_container: 6
2024-08-30 18:50:02,907:INFO:_display_container: 2
2024-08-30 18:50:02,908:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-30 18:50:02,909:INFO:create_model() successfully completed......................................
2024-08-30 18:50:03,131:INFO:SubProcess create_model() end ==================================
2024-08-30 18:50:03,131:INFO:Creating metrics dataframe
2024-08-30 18:50:03,144:INFO:Initializing Quadratic Discriminant Analysis
2024-08-30 18:50:03,145:INFO:Total runtime is 1.7351533770561218 minutes
2024-08-30 18:50:03,149:INFO:SubProcess create_model() called ==================================
2024-08-30 18:50:03,150:INFO:Initializing create_model()
2024-08-30 18:50:03,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:50:03,151:INFO:Checking exceptions
2024-08-30 18:50:03,151:INFO:Importing libraries
2024-08-30 18:50:03,151:INFO:Copying training dataset
2024-08-30 18:50:03,576:INFO:Defining folds
2024-08-30 18:50:03,576:INFO:Declaring metric variables
2024-08-30 18:50:03,581:INFO:Importing untrained model
2024-08-30 18:50:03,586:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-30 18:50:03,595:INFO:Starting cross validation
2024-08-30 18:50:03,596:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:50:04,138:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-30 18:50:04,139:WARNING:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 899, in fit
    X, y = self._validate_data(X, y)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:50:04,140:INFO:Initializing create_model()
2024-08-30 18:50:04,140:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:50:04,140:INFO:Checking exceptions
2024-08-30 18:50:04,140:INFO:Importing libraries
2024-08-30 18:50:04,140:INFO:Copying training dataset
2024-08-30 18:50:04,580:INFO:Defining folds
2024-08-30 18:50:04,580:INFO:Declaring metric variables
2024-08-30 18:50:04,585:INFO:Importing untrained model
2024-08-30 18:50:04,590:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-30 18:50:04,600:INFO:Starting cross validation
2024-08-30 18:50:04,602:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:50:05,141:ERROR:create_model() for qda raised an exception or returned all 0.0:
2024-08-30 18:50:05,143:ERROR:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 899, in fit
    X, y = self._validate_data(X, y)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 899, in fit
    X, y = self._validate_data(X, y)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:50:05,145:INFO:Initializing Ada Boost Classifier
2024-08-30 18:50:05,145:INFO:Total runtime is 1.7684907873471578 minutes
2024-08-30 18:50:05,149:INFO:SubProcess create_model() called ==================================
2024-08-30 18:50:05,149:INFO:Initializing create_model()
2024-08-30 18:50:05,149:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:50:05,149:INFO:Checking exceptions
2024-08-30 18:50:05,149:INFO:Importing libraries
2024-08-30 18:50:05,149:INFO:Copying training dataset
2024-08-30 18:50:05,595:INFO:Defining folds
2024-08-30 18:50:05,596:INFO:Declaring metric variables
2024-08-30 18:50:05,601:INFO:Importing untrained model
2024-08-30 18:50:05,606:INFO:Ada Boost Classifier Imported successfully
2024-08-30 18:50:05,615:INFO:Starting cross validation
2024-08-30 18:50:05,617:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:50:05,946:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:50:05,972:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:50:06,009:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:50:06,037:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:50:06,063:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:50:06,110:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:50:06,146:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:50:06,149:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:50:06,190:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:50:06,222:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 18:50:10,763:INFO:Calculating mean and std
2024-08-30 18:50:10,764:INFO:Creating metrics dataframe
2024-08-30 18:50:10,769:INFO:Uploading results into container
2024-08-30 18:50:10,770:INFO:Uploading model into container now
2024-08-30 18:50:10,771:INFO:_master_model_container: 7
2024-08-30 18:50:10,771:INFO:_display_container: 2
2024-08-30 18:50:10,771:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-08-30 18:50:10,771:INFO:create_model() successfully completed......................................
2024-08-30 18:50:10,926:INFO:SubProcess create_model() end ==================================
2024-08-30 18:50:10,926:INFO:Creating metrics dataframe
2024-08-30 18:50:10,941:INFO:Initializing Gradient Boosting Classifier
2024-08-30 18:50:10,941:INFO:Total runtime is 1.8650817275047302 minutes
2024-08-30 18:50:10,946:INFO:SubProcess create_model() called ==================================
2024-08-30 18:50:10,947:INFO:Initializing create_model()
2024-08-30 18:50:10,948:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:50:10,948:INFO:Checking exceptions
2024-08-30 18:50:10,948:INFO:Importing libraries
2024-08-30 18:50:10,948:INFO:Copying training dataset
2024-08-30 18:50:11,365:INFO:Defining folds
2024-08-30 18:50:11,365:INFO:Declaring metric variables
2024-08-30 18:50:11,371:INFO:Importing untrained model
2024-08-30 18:50:11,376:INFO:Gradient Boosting Classifier Imported successfully
2024-08-30 18:50:11,384:INFO:Starting cross validation
2024-08-30 18:50:11,386:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:50:25,865:INFO:Calculating mean and std
2024-08-30 18:50:25,866:INFO:Creating metrics dataframe
2024-08-30 18:50:25,871:INFO:Uploading results into container
2024-08-30 18:50:25,872:INFO:Uploading model into container now
2024-08-30 18:50:25,873:INFO:_master_model_container: 8
2024-08-30 18:50:25,873:INFO:_display_container: 2
2024-08-30 18:50:25,873:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-30 18:50:25,874:INFO:create_model() successfully completed......................................
2024-08-30 18:50:26,030:INFO:SubProcess create_model() end ==================================
2024-08-30 18:50:26,030:INFO:Creating metrics dataframe
2024-08-30 18:50:26,043:INFO:Initializing Linear Discriminant Analysis
2024-08-30 18:50:26,043:INFO:Total runtime is 2.11678417523702 minutes
2024-08-30 18:50:26,047:INFO:SubProcess create_model() called ==================================
2024-08-30 18:50:26,048:INFO:Initializing create_model()
2024-08-30 18:50:26,048:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:50:26,048:INFO:Checking exceptions
2024-08-30 18:50:26,048:INFO:Importing libraries
2024-08-30 18:50:26,048:INFO:Copying training dataset
2024-08-30 18:50:26,469:INFO:Defining folds
2024-08-30 18:50:26,470:INFO:Declaring metric variables
2024-08-30 18:50:26,473:INFO:Importing untrained model
2024-08-30 18:50:26,478:INFO:Linear Discriminant Analysis Imported successfully
2024-08-30 18:50:26,487:INFO:Starting cross validation
2024-08-30 18:50:26,488:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:50:27,026:WARNING:create_model() for lda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-30 18:50:27,027:WARNING:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:50:27,028:INFO:Initializing create_model()
2024-08-30 18:50:27,028:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:50:27,028:INFO:Checking exceptions
2024-08-30 18:50:27,028:INFO:Importing libraries
2024-08-30 18:50:27,028:INFO:Copying training dataset
2024-08-30 18:50:27,464:INFO:Defining folds
2024-08-30 18:50:27,464:INFO:Declaring metric variables
2024-08-30 18:50:27,468:INFO:Importing untrained model
2024-08-30 18:50:27,474:INFO:Linear Discriminant Analysis Imported successfully
2024-08-30 18:50:27,482:INFO:Starting cross validation
2024-08-30 18:50:27,483:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:50:28,018:ERROR:create_model() for lda raised an exception or returned all 0.0:
2024-08-30 18:50:28,019:ERROR:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 18:50:28,021:INFO:Initializing Extra Trees Classifier
2024-08-30 18:50:28,021:INFO:Total runtime is 2.1497480750083926 minutes
2024-08-30 18:50:28,025:INFO:SubProcess create_model() called ==================================
2024-08-30 18:50:28,025:INFO:Initializing create_model()
2024-08-30 18:50:28,025:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:50:28,025:INFO:Checking exceptions
2024-08-30 18:50:28,025:INFO:Importing libraries
2024-08-30 18:50:28,025:INFO:Copying training dataset
2024-08-30 18:50:28,461:INFO:Defining folds
2024-08-30 18:50:28,461:INFO:Declaring metric variables
2024-08-30 18:50:28,466:INFO:Importing untrained model
2024-08-30 18:50:28,470:INFO:Extra Trees Classifier Imported successfully
2024-08-30 18:50:28,479:INFO:Starting cross validation
2024-08-30 18:50:28,481:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:51:25,228:INFO:Calculating mean and std
2024-08-30 18:51:25,230:INFO:Creating metrics dataframe
2024-08-30 18:51:25,236:INFO:Uploading results into container
2024-08-30 18:51:25,237:INFO:Uploading model into container now
2024-08-30 18:51:25,239:INFO:_master_model_container: 9
2024-08-30 18:51:25,239:INFO:_display_container: 2
2024-08-30 18:51:25,240:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:51:25,240:INFO:create_model() successfully completed......................................
2024-08-30 18:51:25,427:INFO:SubProcess create_model() end ==================================
2024-08-30 18:51:25,427:INFO:Creating metrics dataframe
2024-08-30 18:51:25,440:INFO:Initializing Extreme Gradient Boosting
2024-08-30 18:51:25,440:INFO:Total runtime is 3.1067323327064518 minutes
2024-08-30 18:51:25,445:INFO:SubProcess create_model() called ==================================
2024-08-30 18:51:25,446:INFO:Initializing create_model()
2024-08-30 18:51:25,446:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:51:25,446:INFO:Checking exceptions
2024-08-30 18:51:25,447:INFO:Importing libraries
2024-08-30 18:51:25,447:INFO:Copying training dataset
2024-08-30 18:51:25,862:INFO:Defining folds
2024-08-30 18:51:25,862:INFO:Declaring metric variables
2024-08-30 18:51:25,867:INFO:Importing untrained model
2024-08-30 18:51:25,873:INFO:Extreme Gradient Boosting Imported successfully
2024-08-30 18:51:25,881:INFO:Starting cross validation
2024-08-30 18:51:25,882:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:51:26,964:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:26,975:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:26,984:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:26,990:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:27,063:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:27,110:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:27,168:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:27,178:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:27,179:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:27,180:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,090:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,115:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,124:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,140:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,144:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,159:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,169:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,185:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,294:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,330:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,368:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,370:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,392:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,394:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,399:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,399:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,408:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,420:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,426:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,433:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 18:51:29,475:INFO:Calculating mean and std
2024-08-30 18:51:29,477:INFO:Creating metrics dataframe
2024-08-30 18:51:29,482:INFO:Uploading results into container
2024-08-30 18:51:29,483:INFO:Uploading model into container now
2024-08-30 18:51:29,484:INFO:_master_model_container: 10
2024-08-30 18:51:29,485:INFO:_display_container: 2
2024-08-30 18:51:29,486:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-30 18:51:29,486:INFO:create_model() successfully completed......................................
2024-08-30 18:51:29,643:INFO:SubProcess create_model() end ==================================
2024-08-30 18:51:29,643:INFO:Creating metrics dataframe
2024-08-30 18:51:29,657:INFO:Initializing Light Gradient Boosting Machine
2024-08-30 18:51:29,658:INFO:Total runtime is 3.177038482824962 minutes
2024-08-30 18:51:29,664:INFO:SubProcess create_model() called ==================================
2024-08-30 18:51:29,664:INFO:Initializing create_model()
2024-08-30 18:51:29,664:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:51:29,664:INFO:Checking exceptions
2024-08-30 18:51:29,664:INFO:Importing libraries
2024-08-30 18:51:29,664:INFO:Copying training dataset
2024-08-30 18:51:30,080:INFO:Defining folds
2024-08-30 18:51:30,081:INFO:Declaring metric variables
2024-08-30 18:51:30,086:INFO:Importing untrained model
2024-08-30 18:51:30,091:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-30 18:51:30,101:INFO:Starting cross validation
2024-08-30 18:51:30,103:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:51:34,595:INFO:Calculating mean and std
2024-08-30 18:51:34,597:INFO:Creating metrics dataframe
2024-08-30 18:51:34,601:INFO:Uploading results into container
2024-08-30 18:51:34,602:INFO:Uploading model into container now
2024-08-30 18:51:34,603:INFO:_master_model_container: 11
2024-08-30 18:51:34,604:INFO:_display_container: 2
2024-08-30 18:51:34,605:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-30 18:51:34,605:INFO:create_model() successfully completed......................................
2024-08-30 18:51:34,814:INFO:SubProcess create_model() end ==================================
2024-08-30 18:51:34,815:INFO:Creating metrics dataframe
2024-08-30 18:51:34,828:INFO:Initializing Dummy Classifier
2024-08-30 18:51:34,828:INFO:Total runtime is 3.2632005850474046 minutes
2024-08-30 18:51:34,832:INFO:SubProcess create_model() called ==================================
2024-08-30 18:51:34,833:INFO:Initializing create_model()
2024-08-30 18:51:34,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170AB64C10>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:51:34,833:INFO:Checking exceptions
2024-08-30 18:51:34,833:INFO:Importing libraries
2024-08-30 18:51:34,833:INFO:Copying training dataset
2024-08-30 18:51:35,253:INFO:Defining folds
2024-08-30 18:51:35,254:INFO:Declaring metric variables
2024-08-30 18:51:35,258:INFO:Importing untrained model
2024-08-30 18:51:35,263:INFO:Dummy Classifier Imported successfully
2024-08-30 18:51:35,272:INFO:Starting cross validation
2024-08-30 18:51:35,273:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:51:35,732:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-30 18:51:35,737:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-30 18:51:35,763:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-30 18:51:35,830:INFO:Calculating mean and std
2024-08-30 18:51:35,832:INFO:Creating metrics dataframe
2024-08-30 18:51:35,835:INFO:Uploading results into container
2024-08-30 18:51:35,837:INFO:Uploading model into container now
2024-08-30 18:51:35,838:INFO:_master_model_container: 12
2024-08-30 18:51:35,838:INFO:_display_container: 2
2024-08-30 18:51:35,838:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-30 18:51:35,838:INFO:create_model() successfully completed......................................
2024-08-30 18:51:35,992:INFO:SubProcess create_model() end ==================================
2024-08-30 18:51:35,992:INFO:Creating metrics dataframe
2024-08-30 18:51:36,023:INFO:Initializing create_model()
2024-08-30 18:51:36,024:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:51:36,024:INFO:Checking exceptions
2024-08-30 18:51:36,027:INFO:Importing libraries
2024-08-30 18:51:36,027:INFO:Copying training dataset
2024-08-30 18:51:36,470:INFO:Defining folds
2024-08-30 18:51:36,470:INFO:Declaring metric variables
2024-08-30 18:51:36,470:INFO:Importing untrained model
2024-08-30 18:51:36,471:INFO:Declaring custom model
2024-08-30 18:51:36,471:INFO:Extra Trees Classifier Imported successfully
2024-08-30 18:51:36,472:INFO:Cross validation set to False
2024-08-30 18:51:36,472:INFO:Fitting Model
2024-08-30 18:51:42,558:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:51:42,558:INFO:create_model() successfully completed......................................
2024-08-30 18:51:42,746:INFO:_master_model_container: 12
2024-08-30 18:51:42,746:INFO:_display_container: 2
2024-08-30 18:51:42,747:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:51:42,747:INFO:compare_models() successfully completed......................................
2024-08-30 18:51:42,804:INFO:Initializing tune_model()
2024-08-30 18:51:42,804:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>)
2024-08-30 18:51:42,805:INFO:Checking exceptions
2024-08-30 18:51:42,972:INFO:Copying training dataset
2024-08-30 18:51:43,263:INFO:Checking base model
2024-08-30 18:51:43,263:INFO:Base model : Extra Trees Classifier
2024-08-30 18:51:43,268:INFO:Declaring metric variables
2024-08-30 18:51:43,273:INFO:Defining Hyperparameters
2024-08-30 18:51:43,435:INFO:Tuning with n_jobs=-1
2024-08-30 18:51:43,435:INFO:Initializing RandomizedSearchCV
2024-08-30 18:53:06,536:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2024-08-30 18:53:06,538:INFO:Hyperparameter search completed
2024-08-30 18:53:06,538:INFO:SubProcess create_model() called ==================================
2024-08-30 18:53:06,540:INFO:Initializing create_model()
2024-08-30 18:53:06,540:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002173A9E7370>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2024-08-30 18:53:06,540:INFO:Checking exceptions
2024-08-30 18:53:06,540:INFO:Importing libraries
2024-08-30 18:53:06,541:INFO:Copying training dataset
2024-08-30 18:53:07,079:INFO:Defining folds
2024-08-30 18:53:07,080:INFO:Declaring metric variables
2024-08-30 18:53:07,086:INFO:Importing untrained model
2024-08-30 18:53:07,086:INFO:Declaring custom model
2024-08-30 18:53:07,094:INFO:Extra Trees Classifier Imported successfully
2024-08-30 18:53:07,104:INFO:Starting cross validation
2024-08-30 18:53:07,107:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:53:42,900:INFO:Calculating mean and std
2024-08-30 18:53:42,901:INFO:Creating metrics dataframe
2024-08-30 18:53:42,910:INFO:Finalizing model
2024-08-30 18:53:47,052:INFO:Uploading results into container
2024-08-30 18:53:47,054:INFO:Uploading model into container now
2024-08-30 18:53:47,055:INFO:_master_model_container: 13
2024-08-30 18:53:47,055:INFO:_display_container: 3
2024-08-30 18:53:47,056:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=6, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0,
                     min_samples_leaf=4, min_samples_split=7,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=200, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2024-08-30 18:53:47,056:INFO:create_model() successfully completed......................................
2024-08-30 18:53:47,256:INFO:SubProcess create_model() end ==================================
2024-08-30 18:53:47,256:INFO:choose_better activated
2024-08-30 18:53:47,261:INFO:SubProcess create_model() called ==================================
2024-08-30 18:53:47,263:INFO:Initializing create_model()
2024-08-30 18:53:47,263:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:53:47,263:INFO:Checking exceptions
2024-08-30 18:53:47,265:INFO:Importing libraries
2024-08-30 18:53:47,265:INFO:Copying training dataset
2024-08-30 18:53:47,726:INFO:Defining folds
2024-08-30 18:53:47,726:INFO:Declaring metric variables
2024-08-30 18:53:47,727:INFO:Importing untrained model
2024-08-30 18:53:47,727:INFO:Declaring custom model
2024-08-30 18:53:47,728:INFO:Extra Trees Classifier Imported successfully
2024-08-30 18:53:47,728:INFO:Starting cross validation
2024-08-30 18:53:47,729:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 18:54:45,672:INFO:Calculating mean and std
2024-08-30 18:54:45,672:INFO:Creating metrics dataframe
2024-08-30 18:54:45,674:INFO:Finalizing model
2024-08-30 18:54:52,086:INFO:Uploading results into container
2024-08-30 18:54:52,087:INFO:Uploading model into container now
2024-08-30 18:54:52,088:INFO:_master_model_container: 14
2024-08-30 18:54:52,088:INFO:_display_container: 4
2024-08-30 18:54:52,088:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:54:52,088:INFO:create_model() successfully completed......................................
2024-08-30 18:54:52,269:INFO:SubProcess create_model() end ==================================
2024-08-30 18:54:52,270:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for AUC is 0.9979
2024-08-30 18:54:52,271:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=6, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0,
                     min_samples_leaf=4, min_samples_split=7,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=200, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for AUC is 0.9523
2024-08-30 18:54:52,272:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2024-08-30 18:54:52,272:INFO:choose_better completed
2024-08-30 18:54:52,272:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-08-30 18:54:52,289:INFO:_master_model_container: 14
2024-08-30 18:54:52,290:INFO:_display_container: 3
2024-08-30 18:54:52,291:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:54:52,291:INFO:tune_model() successfully completed......................................
2024-08-30 18:54:52,508:INFO:Initializing finalize_model()
2024-08-30 18:54:52,508:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-08-30 18:54:52,509:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 18:54:52,514:INFO:Initializing create_model()
2024-08-30 18:54:52,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 18:54:52,514:INFO:Checking exceptions
2024-08-30 18:54:52,517:INFO:Importing libraries
2024-08-30 18:54:52,519:INFO:Copying training dataset
2024-08-30 18:54:52,522:INFO:Defining folds
2024-08-30 18:54:52,522:INFO:Declaring metric variables
2024-08-30 18:54:52,522:INFO:Importing untrained model
2024-08-30 18:54:52,522:INFO:Declaring custom model
2024-08-30 18:54:52,524:INFO:Extra Trees Classifier Imported successfully
2024-08-30 18:54:52,525:INFO:Cross validation set to False
2024-08-30 18:54:52,525:INFO:Fitting Model
2024-08-30 18:55:04,289:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-08-30 18:55:04,289:INFO:create_model() successfully completed......................................
2024-08-30 18:55:04,470:INFO:_master_model_container: 14
2024-08-30 18:55:04,470:INFO:_display_container: 3
2024-08-30 18:55:04,476:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-08-30 18:55:04,476:INFO:finalize_model() successfully completed......................................
2024-08-30 19:05:48,307:INFO:Initializing predict_model()
2024-08-30 19:05:48,307:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002173F66C5E0>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002170EC71630>)
2024-08-30 19:05:48,307:INFO:Checking exceptions
2024-08-30 19:05:48,307:INFO:Preloading libraries
2024-08-30 19:05:48,310:INFO:Set up data.
2024-08-30 19:05:48,325:INFO:Set up index.
2024-08-30 19:11:16,198:INFO:PyCaret ClassificationExperiment
2024-08-30 19:11:16,199:INFO:Logging name: clf-default-name
2024-08-30 19:11:16,199:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2024-08-30 19:11:16,199:INFO:version 3.3.2
2024-08-30 19:11:16,199:INFO:Initializing setup()
2024-08-30 19:11:16,200:INFO:self.USI: 0db5
2024-08-30 19:11:16,200:INFO:self._variable_keys: {'data', 'X', 'exp_id', 'idx', 'X_train', 'is_multiclass', 'y_train', '_ml_usecase', 'exp_name_log', 'y_test', '_available_plots', 'USI', 'n_jobs_param', 'log_plots_param', 'seed', 'fold_shuffle_param', 'X_test', 'pipeline', 'fix_imbalance', 'html_param', 'logging_param', 'memory', 'gpu_param', 'gpu_n_jobs_param', 'fold_groups_param', 'y', 'target_param', 'fold_generator'}
2024-08-30 19:11:16,200:INFO:Checking environment
2024-08-30 19:11:16,201:INFO:python_version: 3.10.14
2024-08-30 19:11:16,201:INFO:python_build: ('main', 'Mar 20 2024 12:40:08')
2024-08-30 19:11:16,201:INFO:machine: AMD64
2024-08-30 19:11:16,201:INFO:platform: Windows-10-10.0.22631-SP0
2024-08-30 19:11:16,210:INFO:Memory: svmem(total=33737760768, available=19582443520, percent=42.0, used=14155317248, free=19582443520)
2024-08-30 19:11:16,211:INFO:Physical Core: 8
2024-08-30 19:11:16,211:INFO:Logical Core: 16
2024-08-30 19:11:16,211:INFO:Checking libraries
2024-08-30 19:11:16,211:INFO:System:
2024-08-30 19:11:16,211:INFO:    python: 3.10.14 | packaged by conda-forge | (main, Mar 20 2024, 12:40:08) [MSC v.1938 64 bit (AMD64)]
2024-08-30 19:11:16,211:INFO:executable: c:\Users\Guill\miniconda3\envs\term_deposit\python.exe
2024-08-30 19:11:16,211:INFO:   machine: Windows-10-10.0.22631-SP0
2024-08-30 19:11:16,211:INFO:PyCaret required dependencies:
2024-08-30 19:11:16,211:INFO:                 pip: 24.2
2024-08-30 19:11:16,211:INFO:          setuptools: 72.2.0
2024-08-30 19:11:16,211:INFO:             pycaret: 3.3.2
2024-08-30 19:11:16,211:INFO:             IPython: 8.26.0
2024-08-30 19:11:16,211:INFO:          ipywidgets: 8.1.5
2024-08-30 19:11:16,211:INFO:                tqdm: 4.66.5
2024-08-30 19:11:16,211:INFO:               numpy: 1.23.5
2024-08-30 19:11:16,212:INFO:              pandas: 1.5.3
2024-08-30 19:11:16,212:INFO:              jinja2: 3.1.4
2024-08-30 19:11:16,212:INFO:               scipy: 1.11.4
2024-08-30 19:11:16,212:INFO:              joblib: 1.3.2
2024-08-30 19:11:16,212:INFO:             sklearn: 1.4.2
2024-08-30 19:11:16,212:INFO:                pyod: 2.0.1
2024-08-30 19:11:16,212:INFO:            imblearn: 0.12.3
2024-08-30 19:11:16,212:INFO:   category_encoders: 2.6.3
2024-08-30 19:11:16,212:INFO:            lightgbm: 4.5.0
2024-08-30 19:11:16,212:INFO:               numba: 0.60.0
2024-08-30 19:11:16,212:INFO:            requests: 2.32.3
2024-08-30 19:11:16,212:INFO:          matplotlib: 3.7.5
2024-08-30 19:11:16,212:INFO:          scikitplot: 0.3.7
2024-08-30 19:11:16,212:INFO:         yellowbrick: 1.5
2024-08-30 19:11:16,212:INFO:              plotly: 5.23.0
2024-08-30 19:11:16,212:INFO:    plotly-resampler: Not installed
2024-08-30 19:11:16,212:INFO:             kaleido: 0.2.1
2024-08-30 19:11:16,212:INFO:           schemdraw: 0.15
2024-08-30 19:11:16,212:INFO:         statsmodels: 0.14.2
2024-08-30 19:11:16,212:INFO:              sktime: 0.26.0
2024-08-30 19:11:16,212:INFO:               tbats: 1.1.3
2024-08-30 19:11:16,213:INFO:            pmdarima: 2.0.4
2024-08-30 19:11:16,213:INFO:              psutil: 6.0.0
2024-08-30 19:11:16,213:INFO:          markupsafe: 2.1.5
2024-08-30 19:11:16,213:INFO:             pickle5: Not installed
2024-08-30 19:11:16,213:INFO:         cloudpickle: 3.0.0
2024-08-30 19:11:16,213:INFO:         deprecation: 2.1.0
2024-08-30 19:11:16,213:INFO:              xxhash: 3.5.0
2024-08-30 19:11:16,213:INFO:           wurlitzer: Not installed
2024-08-30 19:11:16,213:INFO:PyCaret optional dependencies:
2024-08-30 19:11:16,213:INFO:                shap: 0.43.0
2024-08-30 19:11:16,213:INFO:           interpret: Not installed
2024-08-30 19:11:16,213:INFO:                umap: Not installed
2024-08-30 19:11:16,213:INFO:     ydata_profiling: Not installed
2024-08-30 19:11:16,213:INFO:  explainerdashboard: Not installed
2024-08-30 19:11:16,214:INFO:             autoviz: Not installed
2024-08-30 19:11:16,214:INFO:           fairlearn: Not installed
2024-08-30 19:11:16,214:INFO:          deepchecks: Not installed
2024-08-30 19:11:16,214:INFO:             xgboost: 2.1.1
2024-08-30 19:11:16,214:INFO:            catboost: Not installed
2024-08-30 19:11:16,214:INFO:              kmodes: Not installed
2024-08-30 19:11:16,214:INFO:             mlxtend: Not installed
2024-08-30 19:11:16,214:INFO:       statsforecast: Not installed
2024-08-30 19:11:16,214:INFO:        tune_sklearn: Not installed
2024-08-30 19:11:16,214:INFO:                 ray: 2.35.0
2024-08-30 19:11:16,214:INFO:            hyperopt: Not installed
2024-08-30 19:11:16,214:INFO:              optuna: Not installed
2024-08-30 19:11:16,214:INFO:               skopt: Not installed
2024-08-30 19:11:16,214:INFO:              mlflow: 2.16.0
2024-08-30 19:11:16,214:INFO:              gradio: Not installed
2024-08-30 19:11:16,214:INFO:             fastapi: Not installed
2024-08-30 19:11:16,215:INFO:             uvicorn: Not installed
2024-08-30 19:11:16,215:INFO:              m2cgen: Not installed
2024-08-30 19:11:16,215:INFO:           evidently: Not installed
2024-08-30 19:11:16,215:INFO:               fugue: Not installed
2024-08-30 19:11:16,215:INFO:           streamlit: Not installed
2024-08-30 19:11:16,215:INFO:             prophet: Not installed
2024-08-30 19:11:16,215:INFO:None
2024-08-30 19:11:16,215:INFO:Set up data.
2024-08-30 19:11:16,270:INFO:Set up folding strategy.
2024-08-30 19:11:16,271:INFO:Set up train/test split.
2024-08-30 19:11:16,605:INFO:Set up index.
2024-08-30 19:11:16,608:INFO:Assigning column types.
2024-08-30 19:11:16,614:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2024-08-30 19:11:16,665:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-30 19:11:16,666:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 19:11:16,697:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 19:11:16,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 19:11:16,751:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2024-08-30 19:11:16,752:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 19:11:16,784:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 19:11:16,787:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 19:11:16,787:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2024-08-30 19:11:16,837:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 19:11:16,867:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 19:11:16,870:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 19:11:16,924:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2024-08-30 19:11:16,956:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 19:11:16,959:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 19:11:16,960:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2024-08-30 19:11:17,044:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 19:11:17,047:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 19:11:17,131:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 19:11:17,135:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 19:11:17,136:INFO:Preparing preprocessing pipeline...
2024-08-30 19:11:17,138:INFO:Set up simple imputation.
2024-08-30 19:11:17,520:INFO:Finished creating preprocessing pipeline.
2024-08-30 19:11:17,525:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\Guill\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'fea...
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent')))],
         verbose=False)
2024-08-30 19:11:17,525:INFO:Creating final display dataframe.
2024-08-30 19:11:18,633:INFO:Setup _display_container:                     Description             Value
0                    Session id               123
1                        Target                 y
2                   Target type            Binary
3           Original data shape       (59314, 45)
4        Transformed data shape       (59314, 45)
5   Transformed train set shape       (41519, 45)
6    Transformed test set shape       (17795, 45)
7              Numeric features                44
8                    Preprocess              True
9               Imputation type            simple
10           Numeric imputation              mean
11       Categorical imputation              mode
12               Fold Generator   StratifiedKFold
13                  Fold Number                10
14                     CPU Jobs                -1
15                      Use GPU             False
16               Log Experiment             False
17              Experiment Name  clf-default-name
18                          USI              0db5
2024-08-30 19:11:18,728:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 19:11:18,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 19:11:18,815:INFO:Soft dependency imported: xgboost: 2.1.1
2024-08-30 19:11:18,818:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2024-08-30 19:11:18,819:INFO:setup() successfully completed in 2.63s...............
2024-08-30 19:11:18,866:INFO:Initializing compare_models()
2024-08-30 19:11:18,866:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2024-08-30 19:11:18,866:INFO:Checking exceptions
2024-08-30 19:11:19,031:INFO:Preparing display monitor
2024-08-30 19:11:19,061:INFO:Initializing Logistic Regression
2024-08-30 19:11:19,062:INFO:Total runtime is 1.671314239501953e-05 minutes
2024-08-30 19:11:19,068:INFO:SubProcess create_model() called ==================================
2024-08-30 19:11:19,068:INFO:Initializing create_model()
2024-08-30 19:11:19,069:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:11:19,069:INFO:Checking exceptions
2024-08-30 19:11:19,069:INFO:Importing libraries
2024-08-30 19:11:19,069:INFO:Copying training dataset
2024-08-30 19:11:19,504:INFO:Defining folds
2024-08-30 19:11:19,504:INFO:Declaring metric variables
2024-08-30 19:11:19,508:INFO:Importing untrained model
2024-08-30 19:11:19,514:INFO:Logistic Regression Imported successfully
2024-08-30 19:11:19,524:INFO:Starting cross validation
2024-08-30 19:11:19,526:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:11:42,036:INFO:Calculating mean and std
2024-08-30 19:11:42,038:INFO:Creating metrics dataframe
2024-08-30 19:11:42,043:INFO:Uploading results into container
2024-08-30 19:11:42,045:INFO:Uploading model into container now
2024-08-30 19:11:42,046:INFO:_master_model_container: 1
2024-08-30 19:11:42,046:INFO:_display_container: 2
2024-08-30 19:11:42,047:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=123, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2024-08-30 19:11:42,048:INFO:create_model() successfully completed......................................
2024-08-30 19:11:42,318:INFO:SubProcess create_model() end ==================================
2024-08-30 19:11:42,318:INFO:Creating metrics dataframe
2024-08-30 19:11:42,327:INFO:Initializing K Neighbors Classifier
2024-08-30 19:11:42,327:INFO:Total runtime is 0.38777462641398114 minutes
2024-08-30 19:11:42,332:INFO:SubProcess create_model() called ==================================
2024-08-30 19:11:42,333:INFO:Initializing create_model()
2024-08-30 19:11:42,333:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:11:42,333:INFO:Checking exceptions
2024-08-30 19:11:42,333:INFO:Importing libraries
2024-08-30 19:11:42,333:INFO:Copying training dataset
2024-08-30 19:11:42,756:INFO:Defining folds
2024-08-30 19:11:42,757:INFO:Declaring metric variables
2024-08-30 19:11:42,763:INFO:Importing untrained model
2024-08-30 19:11:42,767:INFO:K Neighbors Classifier Imported successfully
2024-08-30 19:11:42,777:INFO:Starting cross validation
2024-08-30 19:11:42,779:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:12:40,077:INFO:Calculating mean and std
2024-08-30 19:12:40,079:INFO:Creating metrics dataframe
2024-08-30 19:12:40,083:INFO:Uploading results into container
2024-08-30 19:12:40,084:INFO:Uploading model into container now
2024-08-30 19:12:40,089:INFO:_master_model_container: 2
2024-08-30 19:12:40,090:INFO:_display_container: 2
2024-08-30 19:12:40,093:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2024-08-30 19:12:40,094:INFO:create_model() successfully completed......................................
2024-08-30 19:12:40,615:INFO:SubProcess create_model() end ==================================
2024-08-30 19:12:40,615:INFO:Creating metrics dataframe
2024-08-30 19:12:40,629:INFO:Initializing Naive Bayes
2024-08-30 19:12:40,629:INFO:Total runtime is 1.3594644665718079 minutes
2024-08-30 19:12:40,634:INFO:SubProcess create_model() called ==================================
2024-08-30 19:12:40,635:INFO:Initializing create_model()
2024-08-30 19:12:40,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:12:40,635:INFO:Checking exceptions
2024-08-30 19:12:40,635:INFO:Importing libraries
2024-08-30 19:12:40,635:INFO:Copying training dataset
2024-08-30 19:12:41,091:INFO:Defining folds
2024-08-30 19:12:41,091:INFO:Declaring metric variables
2024-08-30 19:12:41,098:INFO:Importing untrained model
2024-08-30 19:12:41,103:INFO:Naive Bayes Imported successfully
2024-08-30 19:12:41,117:INFO:Starting cross validation
2024-08-30 19:12:41,119:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:12:41,837:WARNING:create_model() for nb raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-30 19:12:41,838:WARNING:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 19:12:41,839:INFO:Initializing create_model()
2024-08-30 19:12:41,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:12:41,839:INFO:Checking exceptions
2024-08-30 19:12:41,839:INFO:Importing libraries
2024-08-30 19:12:41,839:INFO:Copying training dataset
2024-08-30 19:12:42,355:INFO:Defining folds
2024-08-30 19:12:42,355:INFO:Declaring metric variables
2024-08-30 19:12:42,361:INFO:Importing untrained model
2024-08-30 19:12:42,365:INFO:Naive Bayes Imported successfully
2024-08-30 19:12:42,376:INFO:Starting cross validation
2024-08-30 19:12:42,377:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:12:42,991:ERROR:create_model() for nb raised an exception or returned all 0.0:
2024-08-30 19:12:42,992:ERROR:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 263, in fit
    return self._partial_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\naive_bayes.py", line 423, in _partial_fit
    X, y = self._validate_data(X, y, reset=first_call)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 19:12:42,993:INFO:Initializing Decision Tree Classifier
2024-08-30 19:12:42,993:INFO:Total runtime is 1.3988658825556437 minutes
2024-08-30 19:12:43,000:INFO:SubProcess create_model() called ==================================
2024-08-30 19:12:43,001:INFO:Initializing create_model()
2024-08-30 19:12:43,001:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:12:43,001:INFO:Checking exceptions
2024-08-30 19:12:43,001:INFO:Importing libraries
2024-08-30 19:12:43,001:INFO:Copying training dataset
2024-08-30 19:12:43,473:INFO:Defining folds
2024-08-30 19:12:43,473:INFO:Declaring metric variables
2024-08-30 19:12:43,479:INFO:Importing untrained model
2024-08-30 19:12:43,485:INFO:Decision Tree Classifier Imported successfully
2024-08-30 19:12:43,495:INFO:Starting cross validation
2024-08-30 19:12:43,496:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:12:46,588:INFO:Calculating mean and std
2024-08-30 19:12:46,589:INFO:Creating metrics dataframe
2024-08-30 19:12:46,595:INFO:Uploading results into container
2024-08-30 19:12:46,596:INFO:Uploading model into container now
2024-08-30 19:12:46,597:INFO:_master_model_container: 3
2024-08-30 19:12:46,597:INFO:_display_container: 2
2024-08-30 19:12:46,598:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, random_state=123, splitter='best')
2024-08-30 19:12:46,598:INFO:create_model() successfully completed......................................
2024-08-30 19:12:46,795:INFO:SubProcess create_model() end ==================================
2024-08-30 19:12:46,795:INFO:Creating metrics dataframe
2024-08-30 19:12:46,808:INFO:Initializing SVM - Linear Kernel
2024-08-30 19:12:46,809:INFO:Total runtime is 1.462471346060435 minutes
2024-08-30 19:12:46,814:INFO:SubProcess create_model() called ==================================
2024-08-30 19:12:46,815:INFO:Initializing create_model()
2024-08-30 19:12:46,815:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:12:46,815:INFO:Checking exceptions
2024-08-30 19:12:46,815:INFO:Importing libraries
2024-08-30 19:12:46,816:INFO:Copying training dataset
2024-08-30 19:12:47,284:INFO:Defining folds
2024-08-30 19:12:47,285:INFO:Declaring metric variables
2024-08-30 19:12:47,292:INFO:Importing untrained model
2024-08-30 19:12:47,298:INFO:SVM - Linear Kernel Imported successfully
2024-08-30 19:12:47,310:INFO:Starting cross validation
2024-08-30 19:12:47,312:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:12:48,558:INFO:Calculating mean and std
2024-08-30 19:12:48,560:INFO:Creating metrics dataframe
2024-08-30 19:12:48,567:INFO:Uploading results into container
2024-08-30 19:12:48,568:INFO:Uploading model into container now
2024-08-30 19:12:48,569:INFO:_master_model_container: 4
2024-08-30 19:12:48,569:INFO:_display_container: 2
2024-08-30 19:12:48,570:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=123, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2024-08-30 19:12:48,570:INFO:create_model() successfully completed......................................
2024-08-30 19:12:48,768:INFO:SubProcess create_model() end ==================================
2024-08-30 19:12:48,768:INFO:Creating metrics dataframe
2024-08-30 19:12:48,780:INFO:Initializing Ridge Classifier
2024-08-30 19:12:48,780:INFO:Total runtime is 1.4953161676724753 minutes
2024-08-30 19:12:48,784:INFO:SubProcess create_model() called ==================================
2024-08-30 19:12:48,785:INFO:Initializing create_model()
2024-08-30 19:12:48,786:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:12:48,786:INFO:Checking exceptions
2024-08-30 19:12:48,786:INFO:Importing libraries
2024-08-30 19:12:48,786:INFO:Copying training dataset
2024-08-30 19:12:49,280:INFO:Defining folds
2024-08-30 19:12:49,280:INFO:Declaring metric variables
2024-08-30 19:12:49,288:INFO:Importing untrained model
2024-08-30 19:12:49,297:INFO:Ridge Classifier Imported successfully
2024-08-30 19:12:49,311:INFO:Starting cross validation
2024-08-30 19:12:49,313:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:12:50,634:INFO:Calculating mean and std
2024-08-30 19:12:50,637:INFO:Creating metrics dataframe
2024-08-30 19:12:50,641:INFO:Uploading results into container
2024-08-30 19:12:50,642:INFO:Uploading model into container now
2024-08-30 19:12:50,643:INFO:_master_model_container: 5
2024-08-30 19:12:50,643:INFO:_display_container: 2
2024-08-30 19:12:50,644:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=123, solver='auto',
                tol=0.0001)
2024-08-30 19:12:50,644:INFO:create_model() successfully completed......................................
2024-08-30 19:12:50,869:INFO:SubProcess create_model() end ==================================
2024-08-30 19:12:50,869:INFO:Creating metrics dataframe
2024-08-30 19:12:50,887:INFO:Initializing Random Forest Classifier
2024-08-30 19:12:50,887:INFO:Total runtime is 1.5304351727167766 minutes
2024-08-30 19:12:50,893:INFO:SubProcess create_model() called ==================================
2024-08-30 19:12:50,894:INFO:Initializing create_model()
2024-08-30 19:12:50,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:12:50,895:INFO:Checking exceptions
2024-08-30 19:12:50,895:INFO:Importing libraries
2024-08-30 19:12:50,895:INFO:Copying training dataset
2024-08-30 19:12:51,343:INFO:Defining folds
2024-08-30 19:12:51,344:INFO:Declaring metric variables
2024-08-30 19:12:51,349:INFO:Importing untrained model
2024-08-30 19:12:51,354:INFO:Random Forest Classifier Imported successfully
2024-08-30 19:12:51,366:INFO:Starting cross validation
2024-08-30 19:12:51,367:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:13:26,874:INFO:Calculating mean and std
2024-08-30 19:13:26,876:INFO:Creating metrics dataframe
2024-08-30 19:13:26,881:INFO:Uploading results into container
2024-08-30 19:13:26,882:INFO:Uploading model into container now
2024-08-30 19:13:26,883:INFO:_master_model_container: 6
2024-08-30 19:13:26,883:INFO:_display_container: 2
2024-08-30 19:13:26,884:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       monotonic_cst=None, n_estimators=100, n_jobs=-1,
                       oob_score=False, random_state=123, verbose=0,
                       warm_start=False)
2024-08-30 19:13:26,884:INFO:create_model() successfully completed......................................
2024-08-30 19:13:27,149:INFO:SubProcess create_model() end ==================================
2024-08-30 19:13:27,149:INFO:Creating metrics dataframe
2024-08-30 19:13:27,167:INFO:Initializing Quadratic Discriminant Analysis
2024-08-30 19:13:27,168:INFO:Total runtime is 2.135120109717051 minutes
2024-08-30 19:13:27,175:INFO:SubProcess create_model() called ==================================
2024-08-30 19:13:27,175:INFO:Initializing create_model()
2024-08-30 19:13:27,176:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:13:27,176:INFO:Checking exceptions
2024-08-30 19:13:27,177:INFO:Importing libraries
2024-08-30 19:13:27,177:INFO:Copying training dataset
2024-08-30 19:13:27,674:INFO:Defining folds
2024-08-30 19:13:27,675:INFO:Declaring metric variables
2024-08-30 19:13:27,683:INFO:Importing untrained model
2024-08-30 19:13:27,691:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-30 19:13:27,705:INFO:Starting cross validation
2024-08-30 19:13:27,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:13:28,458:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-30 19:13:28,459:WARNING:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 899, in fit
    X, y = self._validate_data(X, y)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 19:13:28,460:INFO:Initializing create_model()
2024-08-30 19:13:28,460:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:13:28,460:INFO:Checking exceptions
2024-08-30 19:13:28,460:INFO:Importing libraries
2024-08-30 19:13:28,460:INFO:Copying training dataset
2024-08-30 19:13:28,949:INFO:Defining folds
2024-08-30 19:13:28,949:INFO:Declaring metric variables
2024-08-30 19:13:28,956:INFO:Importing untrained model
2024-08-30 19:13:28,962:INFO:Quadratic Discriminant Analysis Imported successfully
2024-08-30 19:13:28,976:INFO:Starting cross validation
2024-08-30 19:13:28,978:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:13:29,650:ERROR:create_model() for qda raised an exception or returned all 0.0:
2024-08-30 19:13:29,651:ERROR:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 899, in fit
    X, y = self._validate_data(X, y)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 899, in fit
    X, y = self._validate_data(X, y)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 19:13:29,654:INFO:Initializing Ada Boost Classifier
2024-08-30 19:13:29,654:INFO:Total runtime is 2.1765456557273866 minutes
2024-08-30 19:13:29,658:INFO:SubProcess create_model() called ==================================
2024-08-30 19:13:29,659:INFO:Initializing create_model()
2024-08-30 19:13:29,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:13:29,659:INFO:Checking exceptions
2024-08-30 19:13:29,660:INFO:Importing libraries
2024-08-30 19:13:29,660:INFO:Copying training dataset
2024-08-30 19:13:30,146:INFO:Defining folds
2024-08-30 19:13:30,147:INFO:Declaring metric variables
2024-08-30 19:13:30,153:INFO:Importing untrained model
2024-08-30 19:13:30,159:INFO:Ada Boost Classifier Imported successfully
2024-08-30 19:13:30,171:INFO:Starting cross validation
2024-08-30 19:13:30,172:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:13:30,557:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 19:13:30,584:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 19:13:30,632:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 19:13:30,665:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 19:13:30,705:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 19:13:30,753:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 19:13:30,769:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 19:13:30,814:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 19:13:30,864:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 19:13:30,899:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\ensemble\_weight_boosting.py:519: FutureWarning: The SAMME.R algorithm (the default) is deprecated and will be removed in 1.6. Use the SAMME algorithm to circumvent this warning.
  warnings.warn(

2024-08-30 19:13:36,564:INFO:Calculating mean and std
2024-08-30 19:13:36,566:INFO:Creating metrics dataframe
2024-08-30 19:13:36,572:INFO:Uploading results into container
2024-08-30 19:13:36,572:INFO:Uploading model into container now
2024-08-30 19:13:36,573:INFO:_master_model_container: 7
2024-08-30 19:13:36,573:INFO:_display_container: 2
2024-08-30 19:13:36,573:INFO:AdaBoostClassifier(algorithm='SAMME.R', estimator=None, learning_rate=1.0,
                   n_estimators=50, random_state=123)
2024-08-30 19:13:36,573:INFO:create_model() successfully completed......................................
2024-08-30 19:13:36,760:INFO:SubProcess create_model() end ==================================
2024-08-30 19:13:36,761:INFO:Creating metrics dataframe
2024-08-30 19:13:36,782:INFO:Initializing Gradient Boosting Classifier
2024-08-30 19:13:36,783:INFO:Total runtime is 2.2953601201375324 minutes
2024-08-30 19:13:36,790:INFO:SubProcess create_model() called ==================================
2024-08-30 19:13:36,791:INFO:Initializing create_model()
2024-08-30 19:13:36,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:13:36,791:INFO:Checking exceptions
2024-08-30 19:13:36,791:INFO:Importing libraries
2024-08-30 19:13:36,791:INFO:Copying training dataset
2024-08-30 19:13:37,265:INFO:Defining folds
2024-08-30 19:13:37,266:INFO:Declaring metric variables
2024-08-30 19:13:37,274:INFO:Importing untrained model
2024-08-30 19:13:37,280:INFO:Gradient Boosting Classifier Imported successfully
2024-08-30 19:13:37,291:INFO:Starting cross validation
2024-08-30 19:13:37,293:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:13:54,057:INFO:Calculating mean and std
2024-08-30 19:13:54,059:INFO:Creating metrics dataframe
2024-08-30 19:13:54,065:INFO:Uploading results into container
2024-08-30 19:13:54,066:INFO:Uploading model into container now
2024-08-30 19:13:54,067:INFO:_master_model_container: 8
2024-08-30 19:13:54,067:INFO:_display_container: 2
2024-08-30 19:13:54,069:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=123, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2024-08-30 19:13:54,069:INFO:create_model() successfully completed......................................
2024-08-30 19:13:54,266:INFO:SubProcess create_model() end ==================================
2024-08-30 19:13:54,266:INFO:Creating metrics dataframe
2024-08-30 19:13:54,279:INFO:Initializing Linear Discriminant Analysis
2024-08-30 19:13:54,280:INFO:Total runtime is 2.5869756976763405 minutes
2024-08-30 19:13:54,284:INFO:SubProcess create_model() called ==================================
2024-08-30 19:13:54,285:INFO:Initializing create_model()
2024-08-30 19:13:54,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:13:54,285:INFO:Checking exceptions
2024-08-30 19:13:54,285:INFO:Importing libraries
2024-08-30 19:13:54,286:INFO:Copying training dataset
2024-08-30 19:13:54,729:INFO:Defining folds
2024-08-30 19:13:54,730:INFO:Declaring metric variables
2024-08-30 19:13:54,736:INFO:Importing untrained model
2024-08-30 19:13:54,742:INFO:Linear Discriminant Analysis Imported successfully
2024-08-30 19:13:54,753:INFO:Starting cross validation
2024-08-30 19:13:54,755:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:13:55,422:WARNING:create_model() for lda raised an exception or returned all 0.0, trying without fit_kwargs:
2024-08-30 19:13:55,423:WARNING:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 19:13:55,423:INFO:Initializing create_model()
2024-08-30 19:13:55,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:13:55,424:INFO:Checking exceptions
2024-08-30 19:13:55,424:INFO:Importing libraries
2024-08-30 19:13:55,424:INFO:Copying training dataset
2024-08-30 19:13:55,871:INFO:Defining folds
2024-08-30 19:13:55,871:INFO:Declaring metric variables
2024-08-30 19:13:55,877:INFO:Importing untrained model
2024-08-30 19:13:55,882:INFO:Linear Discriminant Analysis Imported successfully
2024-08-30 19:13:55,892:INFO:Starting cross validation
2024-08-30 19:13:55,894:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:13:56,532:ERROR:create_model() for lda raised an exception or returned all 0.0:
2024-08-30 19:13:56,533:ERROR:Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 794, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 815, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1533, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1126, in _create_model_with_cv
    scores = cross_validate(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_param_validation.py", line 213, in wrapper
    return func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 450, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 536, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_validation.py", line 895, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 278, in fit
    fitted_estimator = self._memory_fit(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\joblib\memory.py", line 353, in __call__
    return self.func(*args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\pycaret\internal\pipeline.py", line 69, in _fit_one
    transformer.fit(*args)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 1474, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\discriminant_analysis.py", line 581, in fit
    X, y = self._validate_data(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\base.py", line 650, in _validate_data
    X, y = check_X_y(X, y, **check_params)
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 1263, in check_X_y
    X = check_array(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 963, in check_array
    array = _ensure_sparse_format(
  File "c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\validation.py", line 595, in _ensure_sparse_format
    raise TypeError(
TypeError: Sparse data was passed for X, but dense data is required. Use '.toarray()' to convert to a dense numpy array.


2024-08-30 19:13:56,536:INFO:Initializing Extra Trees Classifier
2024-08-30 19:13:56,536:INFO:Total runtime is 2.6245910445849097 minutes
2024-08-30 19:13:56,540:INFO:SubProcess create_model() called ==================================
2024-08-30 19:13:56,540:INFO:Initializing create_model()
2024-08-30 19:13:56,540:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:13:56,541:INFO:Checking exceptions
2024-08-30 19:13:56,541:INFO:Importing libraries
2024-08-30 19:13:56,541:INFO:Copying training dataset
2024-08-30 19:13:56,972:INFO:Defining folds
2024-08-30 19:13:56,972:INFO:Declaring metric variables
2024-08-30 19:13:56,978:INFO:Importing untrained model
2024-08-30 19:13:56,984:INFO:Extra Trees Classifier Imported successfully
2024-08-30 19:13:56,993:INFO:Starting cross validation
2024-08-30 19:13:56,995:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:14:58,261:INFO:Calculating mean and std
2024-08-30 19:14:58,263:INFO:Creating metrics dataframe
2024-08-30 19:14:58,270:INFO:Uploading results into container
2024-08-30 19:14:58,271:INFO:Uploading model into container now
2024-08-30 19:14:58,272:INFO:_master_model_container: 9
2024-08-30 19:14:58,272:INFO:_display_container: 2
2024-08-30 19:14:58,273:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 19:14:58,273:INFO:create_model() successfully completed......................................
2024-08-30 19:14:58,528:INFO:SubProcess create_model() end ==================================
2024-08-30 19:14:58,528:INFO:Creating metrics dataframe
2024-08-30 19:14:58,544:INFO:Initializing Extreme Gradient Boosting
2024-08-30 19:14:58,544:INFO:Total runtime is 3.658042748769124 minutes
2024-08-30 19:14:58,550:INFO:SubProcess create_model() called ==================================
2024-08-30 19:14:58,550:INFO:Initializing create_model()
2024-08-30 19:14:58,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:14:58,551:INFO:Checking exceptions
2024-08-30 19:14:58,551:INFO:Importing libraries
2024-08-30 19:14:58,551:INFO:Copying training dataset
2024-08-30 19:14:58,988:INFO:Defining folds
2024-08-30 19:14:58,988:INFO:Declaring metric variables
2024-08-30 19:14:58,994:INFO:Importing untrained model
2024-08-30 19:14:59,000:INFO:Extreme Gradient Boosting Imported successfully
2024-08-30 19:14:59,010:INFO:Starting cross validation
2024-08-30 19:14:59,012:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:15:00,700:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:00,764:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:00,769:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:00,793:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:00,794:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:00,794:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:00,809:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:00,812:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:00,813:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:00,814:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,491:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,542:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,572:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,644:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,658:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,660:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,662:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,681:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,699:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,708:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,709:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,716:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,730:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,736:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,740:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,748:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,756:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,786:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,793:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,828:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\xgboost\data.py:575: UserWarning: Sparse arrays from pandas are converted into dense.
  warnings.warn("Sparse arrays from pandas are converted into dense.")

2024-08-30 19:15:03,885:INFO:Calculating mean and std
2024-08-30 19:15:03,888:INFO:Creating metrics dataframe
2024-08-30 19:15:03,893:INFO:Uploading results into container
2024-08-30 19:15:03,894:INFO:Uploading model into container now
2024-08-30 19:15:03,894:INFO:_master_model_container: 10
2024-08-30 19:15:03,895:INFO:_display_container: 2
2024-08-30 19:15:03,896:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, device='cpu', early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              multi_strategy=None, n_estimators=None, n_jobs=-1,
              num_parallel_tree=None, objective='binary:logistic', ...)
2024-08-30 19:15:03,897:INFO:create_model() successfully completed......................................
2024-08-30 19:15:04,087:INFO:SubProcess create_model() end ==================================
2024-08-30 19:15:04,087:INFO:Creating metrics dataframe
2024-08-30 19:15:04,103:INFO:Initializing Light Gradient Boosting Machine
2024-08-30 19:15:04,103:INFO:Total runtime is 3.750701590379079 minutes
2024-08-30 19:15:04,108:INFO:SubProcess create_model() called ==================================
2024-08-30 19:15:04,109:INFO:Initializing create_model()
2024-08-30 19:15:04,110:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:15:04,110:INFO:Checking exceptions
2024-08-30 19:15:04,110:INFO:Importing libraries
2024-08-30 19:15:04,111:INFO:Copying training dataset
2024-08-30 19:15:04,606:INFO:Defining folds
2024-08-30 19:15:04,606:INFO:Declaring metric variables
2024-08-30 19:15:04,614:INFO:Importing untrained model
2024-08-30 19:15:04,622:INFO:Light Gradient Boosting Machine Imported successfully
2024-08-30 19:15:04,634:INFO:Starting cross validation
2024-08-30 19:15:04,636:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:15:11,511:INFO:Calculating mean and std
2024-08-30 19:15:11,513:INFO:Creating metrics dataframe
2024-08-30 19:15:11,518:INFO:Uploading results into container
2024-08-30 19:15:11,518:INFO:Uploading model into container now
2024-08-30 19:15:11,519:INFO:_master_model_container: 11
2024-08-30 19:15:11,519:INFO:_display_container: 2
2024-08-30 19:15:11,520:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=123, reg_alpha=0.0, reg_lambda=0.0, subsample=1.0,
               subsample_for_bin=200000, subsample_freq=0)
2024-08-30 19:15:11,520:INFO:create_model() successfully completed......................................
2024-08-30 19:15:11,843:INFO:SubProcess create_model() end ==================================
2024-08-30 19:15:11,843:INFO:Creating metrics dataframe
2024-08-30 19:15:11,862:INFO:Initializing Dummy Classifier
2024-08-30 19:15:11,862:INFO:Total runtime is 3.8800129135449724 minutes
2024-08-30 19:15:11,869:INFO:SubProcess create_model() called ==================================
2024-08-30 19:15:11,869:INFO:Initializing create_model()
2024-08-30 19:15:11,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000021708F9A830>, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:15:11,869:INFO:Checking exceptions
2024-08-30 19:15:11,869:INFO:Importing libraries
2024-08-30 19:15:11,869:INFO:Copying training dataset
2024-08-30 19:15:12,313:INFO:Defining folds
2024-08-30 19:15:12,314:INFO:Declaring metric variables
2024-08-30 19:15:12,319:INFO:Importing untrained model
2024-08-30 19:15:12,326:INFO:Dummy Classifier Imported successfully
2024-08-30 19:15:12,337:INFO:Starting cross validation
2024-08-30 19:15:12,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:15:12,945:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\metrics\_classification.py:1509: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, f"{metric.capitalize()} is", len(result))

2024-08-30 19:15:12,966:INFO:Calculating mean and std
2024-08-30 19:15:12,968:INFO:Creating metrics dataframe
2024-08-30 19:15:12,971:INFO:Uploading results into container
2024-08-30 19:15:12,972:INFO:Uploading model into container now
2024-08-30 19:15:12,972:INFO:_master_model_container: 12
2024-08-30 19:15:12,972:INFO:_display_container: 2
2024-08-30 19:15:12,973:INFO:DummyClassifier(constant=None, random_state=123, strategy='prior')
2024-08-30 19:15:12,973:INFO:create_model() successfully completed......................................
2024-08-30 19:15:13,201:INFO:SubProcess create_model() end ==================================
2024-08-30 19:15:13,201:INFO:Creating metrics dataframe
2024-08-30 19:15:13,237:INFO:Initializing create_model()
2024-08-30 19:15:13,237:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:15:13,238:INFO:Checking exceptions
2024-08-30 19:15:13,240:INFO:Importing libraries
2024-08-30 19:15:13,241:INFO:Copying training dataset
2024-08-30 19:15:13,680:INFO:Defining folds
2024-08-30 19:15:13,680:INFO:Declaring metric variables
2024-08-30 19:15:13,680:INFO:Importing untrained model
2024-08-30 19:15:13,680:INFO:Declaring custom model
2024-08-30 19:15:13,681:INFO:Extra Trees Classifier Imported successfully
2024-08-30 19:15:13,682:INFO:Cross validation set to False
2024-08-30 19:15:13,682:INFO:Fitting Model
2024-08-30 19:15:20,390:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 19:15:20,390:INFO:create_model() successfully completed......................................
2024-08-30 19:15:20,604:INFO:_master_model_container: 12
2024-08-30 19:15:20,605:INFO:_display_container: 2
2024-08-30 19:15:20,606:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 19:15:20,606:INFO:compare_models() successfully completed......................................
2024-08-30 19:15:20,709:INFO:Initializing tune_model()
2024-08-30 19:15:20,710:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=AUC, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>)
2024-08-30 19:15:20,710:INFO:Checking exceptions
2024-08-30 19:15:20,899:INFO:Copying training dataset
2024-08-30 19:15:21,205:INFO:Checking base model
2024-08-30 19:15:21,205:INFO:Base model : Extra Trees Classifier
2024-08-30 19:15:21,210:INFO:Declaring metric variables
2024-08-30 19:15:21,216:INFO:Defining Hyperparameters
2024-08-30 19:15:21,389:INFO:Tuning with n_jobs=-1
2024-08-30 19:15:21,389:INFO:Initializing RandomizedSearchCV
2024-08-30 19:16:51,059:INFO:best_params: {'actual_estimator__n_estimators': 200, 'actual_estimator__min_samples_split': 7, 'actual_estimator__min_samples_leaf': 4, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 6, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced_subsample', 'actual_estimator__bootstrap': False}
2024-08-30 19:16:51,063:INFO:Hyperparameter search completed
2024-08-30 19:16:51,063:INFO:SubProcess create_model() called ==================================
2024-08-30 19:16:51,065:INFO:Initializing create_model()
2024-08-30 19:16:51,065:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002170E6CA590>, model_only=True, return_train_score=False, error_score=0.0, kwargs={'n_estimators': 200, 'min_samples_split': 7, 'min_samples_leaf': 4, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 6, 'criterion': 'gini', 'class_weight': 'balanced_subsample', 'bootstrap': False})
2024-08-30 19:16:51,065:INFO:Checking exceptions
2024-08-30 19:16:51,066:INFO:Importing libraries
2024-08-30 19:16:51,066:INFO:Copying training dataset
2024-08-30 19:16:51,653:INFO:Defining folds
2024-08-30 19:16:51,654:INFO:Declaring metric variables
2024-08-30 19:16:51,660:INFO:Importing untrained model
2024-08-30 19:16:51,660:INFO:Declaring custom model
2024-08-30 19:16:51,666:INFO:Extra Trees Classifier Imported successfully
2024-08-30 19:16:51,675:INFO:Starting cross validation
2024-08-30 19:16:51,676:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:17:29,946:INFO:Calculating mean and std
2024-08-30 19:17:29,948:INFO:Creating metrics dataframe
2024-08-30 19:17:29,957:INFO:Finalizing model
2024-08-30 19:17:34,141:INFO:Uploading results into container
2024-08-30 19:17:34,142:INFO:Uploading model into container now
2024-08-30 19:17:34,143:INFO:_master_model_container: 13
2024-08-30 19:17:34,144:INFO:_display_container: 3
2024-08-30 19:17:34,145:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=6, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0,
                     min_samples_leaf=4, min_samples_split=7,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=200, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False)
2024-08-30 19:17:34,145:INFO:create_model() successfully completed......................................
2024-08-30 19:17:34,332:INFO:SubProcess create_model() end ==================================
2024-08-30 19:17:34,332:INFO:choose_better activated
2024-08-30 19:17:34,338:INFO:SubProcess create_model() called ==================================
2024-08-30 19:17:34,340:INFO:Initializing create_model()
2024-08-30 19:17:34,340:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:17:34,340:INFO:Checking exceptions
2024-08-30 19:17:34,343:INFO:Importing libraries
2024-08-30 19:17:34,343:INFO:Copying training dataset
2024-08-30 19:17:34,771:INFO:Defining folds
2024-08-30 19:17:34,772:INFO:Declaring metric variables
2024-08-30 19:17:34,772:INFO:Importing untrained model
2024-08-30 19:17:34,772:INFO:Declaring custom model
2024-08-30 19:17:34,773:INFO:Extra Trees Classifier Imported successfully
2024-08-30 19:17:34,773:INFO:Starting cross validation
2024-08-30 19:17:34,774:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2024-08-30 19:18:33,954:INFO:Calculating mean and std
2024-08-30 19:18:33,955:INFO:Creating metrics dataframe
2024-08-30 19:18:33,958:INFO:Finalizing model
2024-08-30 19:18:40,300:INFO:Uploading results into container
2024-08-30 19:18:40,301:INFO:Uploading model into container now
2024-08-30 19:18:40,302:INFO:_master_model_container: 14
2024-08-30 19:18:40,302:INFO:_display_container: 4
2024-08-30 19:18:40,303:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 19:18:40,303:INFO:create_model() successfully completed......................................
2024-08-30 19:18:40,474:INFO:SubProcess create_model() end ==================================
2024-08-30 19:18:40,476:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) result for AUC is 0.9979
2024-08-30 19:18:40,477:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                     class_weight='balanced_subsample', criterion='gini',
                     max_depth=6, max_features=1.0, max_leaf_nodes=None,
                     max_samples=None, min_impurity_decrease=0,
                     min_samples_leaf=4, min_samples_split=7,
                     min_weight_fraction_leaf=0.0, monotonic_cst=None,
                     n_estimators=200, n_jobs=-1, oob_score=False,
                     random_state=123, verbose=0, warm_start=False) result for AUC is 0.9524
2024-08-30 19:18:40,477:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False) is best model
2024-08-30 19:18:40,477:INFO:choose_better completed
2024-08-30 19:18:40,478:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2024-08-30 19:18:40,491:INFO:_master_model_container: 14
2024-08-30 19:18:40,491:INFO:_display_container: 3
2024-08-30 19:18:40,492:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 19:18:40,492:INFO:tune_model() successfully completed......................................
2024-08-30 19:18:40,731:INFO:Initializing finalize_model()
2024-08-30 19:18:40,731:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2024-08-30 19:18:40,731:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False)
2024-08-30 19:18:40,735:INFO:Initializing create_model()
2024-08-30 19:18:40,735:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     monotonic_cst=None, n_estimators=100, n_jobs=-1,
                     oob_score=False, random_state=123, verbose=0,
                     warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, error_score=0.0, kwargs={})
2024-08-30 19:18:40,735:INFO:Checking exceptions
2024-08-30 19:18:40,737:INFO:Importing libraries
2024-08-30 19:18:40,738:INFO:Copying training dataset
2024-08-30 19:18:40,742:INFO:Defining folds
2024-08-30 19:18:40,742:INFO:Declaring metric variables
2024-08-30 19:18:40,742:INFO:Importing untrained model
2024-08-30 19:18:40,742:INFO:Declaring custom model
2024-08-30 19:18:40,743:INFO:Extra Trees Classifier Imported successfully
2024-08-30 19:18:40,744:INFO:Cross validation set to False
2024-08-30 19:18:40,744:INFO:Fitting Model
2024-08-30 19:18:52,419:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-08-30 19:18:52,419:INFO:create_model() successfully completed......................................
2024-08-30 19:18:52,594:INFO:_master_model_container: 14
2024-08-30 19:18:52,594:INFO:_display_container: 3
2024-08-30 19:18:52,601:INFO:Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False)
2024-08-30 19:18:52,601:INFO:finalize_model() successfully completed......................................
2024-08-30 19:19:49,408:INFO:Initializing predict_model()
2024-08-30 19:19:49,408:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002171E63B7F0>)
2024-08-30 19:19:49,409:INFO:Checking exceptions
2024-08-30 19:19:49,409:INFO:Preloading libraries
2024-08-30 19:19:49,411:INFO:Set up data.
2024-08-30 19:19:49,429:INFO:Set up index.
2024-08-30 19:27:43,129:INFO:Initializing predict_model()
2024-08-30 19:27:43,129:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002170F383760>)
2024-08-30 19:27:43,129:INFO:Checking exceptions
2024-08-30 19:27:43,129:INFO:Preloading libraries
2024-08-30 19:27:43,131:INFO:Set up data.
2024-08-30 19:27:43,157:INFO:Set up index.
2024-08-30 19:31:17,771:INFO:Initializing predict_model()
2024-08-30 19:31:17,771:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002171E57D120>)
2024-08-30 19:31:17,771:INFO:Checking exceptions
2024-08-30 19:31:17,771:INFO:Preloading libraries
2024-08-30 19:31:17,773:INFO:Set up data.
2024-08-30 19:31:17,791:INFO:Set up index.
2024-08-30 19:39:13,781:INFO:Initializing predict_model()
2024-08-30 19:39:13,781:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=Pipeline(memory=Memory(location=None),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['feature_1', 'feature_2',
                                             'feature_3', 'feature_4',
                                             'feature_5', 'feature_6',
                                             'feature_7', 'feature_8',
                                             'feature_9', 'feature_10',
                                             'feature_11', 'feature_12',
                                             'feature_13', 'feature_14',
                                             'feature_15', 'feature_16',
                                             'feature_17', 'feature_18',
                                             'feature_19', 'feat...
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight=None, criterion='gini',
                                      max_depth=None, max_features='sqrt',
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0.0,
                                      min_samples_leaf=1, min_samples_split=2,
                                      min_weight_fraction_leaf=0.0,
                                      monotonic_cst=None, n_estimators=100,
                                      n_jobs=-1, oob_score=False,
                                      random_state=123, verbose=0,
                                      warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002173D62AB90>)
2024-08-30 19:39:13,781:INFO:Checking exceptions
2024-08-30 19:39:13,781:INFO:Preloading libraries
2024-08-30 19:39:13,784:INFO:Set up data.
2024-08-30 19:39:13,800:INFO:Set up index.
2024-08-30 19:51:50,505:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\utils\_array_api.py:521: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  array = numpy.asarray(array, order=order, dtype=dtype)

2024-08-31 11:20:58,462:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2024-08-31 11:20:58,467:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2024-08-31 11:20:58,472:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2024-08-31 11:20:58,476:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2024-08-31 11:20:58,481:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2024-08-31 11:20:58,485:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2024-08-31 11:20:58,489:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2024-08-31 11:20:58,494:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2024-08-31 11:20:58,499:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2024-08-31 11:20:58,503:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\sklearn\model_selection\_split.py:737: UserWarning: The least populated class in y has only 4 members, which is less than n_splits=5.
  warnings.warn(

2024-08-31 13:50:00,489:INFO:Initializing predict_model()
2024-08-31 13:50:00,490:INFO:predict_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000217663C4130>, estimator=Pipeline(memory=None,
         steps=[('gradientboostingclassifier',
                 GradientBoostingClassifier(ccp_alpha=0.0,
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=10,
                                            max_features=0.9000000000000001,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=4,
                                            min_samples_split=14,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=42, subsample=0.55,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False), probability_threshold=None, encoded_labels=False, raw_score=False, round=4, verbose=True, ml_usecase=None, preprocess=True, encode_labels=<function _SupervisedExperiment.predict_model.<locals>.encode_labels at 0x000002172342EEF0>)
2024-08-31 13:50:00,490:INFO:Checking exceptions
2024-08-31 13:50:00,490:INFO:Preloading libraries
2024-09-01 08:48:51,583:WARNING:C:\Users\Guill\AppData\Local\Temp\ipykernel_37536\3071501995.py:1: H2ODeprecationWarning: ``summary()`` is deprecated, please use ``show_summary()`` or ``get_summary()`` instead
  lb.summary()

2024-09-01 08:56:49,252:WARNING:c:\Users\Guill\miniconda3\envs\term_deposit\lib\site-packages\h2o\frame.py:1981: H2ODependencyWarning: Converting H2O frame to pandas dataframe using single-thread.  For faster conversion using multi-thread, install polars and pyarrow and use it as pandas_df = h2o_df.as_data_frame(use_multi_thread=True)

  warnings.warn("Converting H2O frame to pandas dataframe using single-thread.  For faster conversion using"

2024-09-01 08:57:10,444:WARNING:Converting H2O frame to pandas dataframe using single-thread.  For faster conversion using multi-thread, install polars and pyarrow and use it as pandas_df = h2o_df.as_data_frame(use_multi_thread=True)


